{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/Graticule.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/LayerType.js","webpack://ol/./build/ol/layer/VectorRenderType.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/canvas/Map.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/IntermediateCanvas.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/render/ReplayGroup.js","webpack://ol/./build/ol/render/ReplayType.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/replay.js","webpack://ol/./build/ol/render/canvas/Replay.js","webpack://ol/./build/ol/render/canvas/ImageReplay.js","webpack://ol/./build/ol/render/canvas/LineStringReplay.js","webpack://ol/./build/ol/render/canvas/PolygonReplay.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextReplay.js","webpack://ol/./build/ol/render/canvas/ReplayGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/webgl/Shader.js","webpack://ol/./build/ol/webgl/Fragment.js","webpack://ol/./build/ol/webgl/Vertex.js","webpack://ol/./build/ol/render/webgl/circlereplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/render/webgl/Replay.js","webpack://ol/./build/ol/render/webgl.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/render/webgl/CircleReplay.js","webpack://ol/./build/ol/render/webgl/texturereplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/webgl/Context.js","webpack://ol/./build/ol/render/webgl/TextureReplay.js","webpack://ol/./build/ol/render/webgl/ImageReplay.js","webpack://ol/./build/ol/geom/flat/topology.js","webpack://ol/./build/ol/render/webgl/linestringreplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack://ol/./build/ol/render/webgl/LineStringReplay.js","webpack://ol/./build/ol/render/webgl/polygonreplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack://ol/./build/ol/structs/LinkedList.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/render/webgl/PolygonReplay.js","webpack://ol/./build/ol/style/Atlas.js","webpack://ol/./build/ol/style/AtlasManager.js","webpack://ol/./build/ol/render/webgl/TextReplay.js","webpack://ol/./build/ol/render/webgl/ReplayGroup.js","webpack://ol/./build/ol/render/webgl/Immediate.js","webpack://ol/./build/ol/renderer/webgl/defaultmapshader.js","webpack://ol/./build/ol/renderer/webgl/defaultmapshader/Locations.js","webpack://ol/./build/ol/renderer/webgl/Layer.js","webpack://ol/./build/ol/renderer/webgl/ImageLayer.js","webpack://ol/./build/ol/renderer/webgl/Map.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/renderer/webgl/tilelayershader.js","webpack://ol/./build/ol/renderer/webgl/tilelayershader/Locations.js","webpack://ol/./build/ol/renderer/webgl/TileLayer.js","webpack://ol/./build/ol/renderer/webgl/VectorLayer.js","webpack://ol/./build/ol/WebGLMap.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorImageTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js","webpack://ol/./build/ol/render.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","floor","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","newRight","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","VERSION","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","arguments$1","arguments","undefined","TypeError","ii","obj_clear","getValues","values","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event_Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","isArray","once","un","ObjectEvent","Event","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","opt_silent","unset","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","createStyleFunction","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","extension","find","func","equals","arr1","arr2","len1","stableSort","compareFnc","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","extent_buffer","opt_extent","extent_clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","extent_applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","transform_translate","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","projections_get","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","proj_getTransform","proj_transform","transformExtent","projections1","projections2","forwardTransform","inverseTransform","addEquivalentTransforms","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","setFromArray","ol_transform_rotate","angle","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","invert","det","mat","determinant","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","applyTransform","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","i$1","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","polygon","makeRegular","getRadius","startAngle","has_ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","interpolatePoint","fraction","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","geodesic_line","interpolate","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","render_EventType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cache","cacheSize","g","exec","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","substr","normalize","Number","fromStringInternal_","asArray","Fill","color_","checksum_","getColor","setColor","getChecksum","style_Fill","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","TextPlacement","Text_Text","font_","font","rotation_","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","DEFAULT_STROKE_STYLE","INTERVALS","Graticule_Graticule","map_","postcomposeListenerKey_","projection_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","strokeStyle","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","intervals_","intervals","setMap","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","geom","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","interval","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","p1","p2","getMap","frac","meridian","getMeridians","lon2","parallel","getParallels","handlePostCompose_","line","labelData","vectorContext","frameState","viewState","pixelRatio","updateProjectionInfo_","setFillStrokeStyle","drawGeometry","setTextStyle","epsg4326Projection","worldExtentP","render","ol_Graticule","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","ol_Kinetic","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","array_remove","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","rotationconstraint_none","ViewHint","ViewProperty","easeIn","easeOut","inAndOut","linear","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createExtent","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","series","complete","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","opacity","visible","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","ratio","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","previousFrameState","hasArea","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","control_Control","Control","target_","listenerKeys","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","fontFamily","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","autoHide_","add","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","Interaction_zoom","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","out_","mapExtent","boxPixelExtent","createOrUpdateFromCoordinates","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ol_ImageBase","ImageBase","getImage","getPixelRatio","ImageState","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","measureTextWidth","rotateAtOffset","resetTransform","drawImage","image","originX","originY","w","alpha","globalAlpha","setTransform","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","fillStyle","setImageStyle","imageStyle","opt_declutterGroup","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineWidth","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerRendererConstructors","canvas_Map","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","renderer_Layer","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","canvas_Layer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","canvas_ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","drawTextOnPath","measure","startM","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textReplay","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Circle","Default","Image","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","canvas_VectorTileLayer","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","dom_outerWidth","marginTop","marginBottom","dom_outerHeight","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","LINEAR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","CONTEXT_IDS","webgl_getContext","opt_attributes","MAX_TEXTURE_SIZE","EXTENSIONS","webgl_gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","Shader_WebGLShader","source_","isAnimated","Shader","Fragment","WebGLShader","WebGLFragment","Vertex","WebGLVertex","fragment","defaultshader_vertex","defaultshader_Locations","gl","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","webgl_Replay","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_TEST","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","CircleReplay","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","radius_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","CanvasGradient","CanvasPattern","defaultshader_fragment","texturereplay_defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","LOST","RESTORED","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","createEmptyTexture","texImage2D","RGBA","UNSIGNED_BYTE","Context","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","key$1","deleteProgram","key$2","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","TextureReplay","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","webgl_ImageReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","getImageSize","lineStringIsClosed","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","LineStringReplay_Instruction","webgl_LineStringReplay","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","product","isValid_","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","DEPTH_TEST","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","structs_LinkedList","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","webgl_PolygonReplay","WebGLPolygonReplay","outerRing","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","segments","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","dist","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ua","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas_Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","info","getInfo_","hitInfo","mergeInfos_","atlases","hitImage","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","style_AtlasManager","TextReplay_WebGLTextReplay","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","sum","curr","addCharToAtlas_","reduce","mCtx","ctx","getAtlas_","params","hash","calculateHash_","HIT_DETECTION_SIZE","ReplayGroup_BATCH_CONSTRUCTORS","webgl_ReplayGroup","WebGLReplayGroup","functions","replayHitDetection_","readPixels","webgl_Immediate","WebGLImmediateRenderer","center_","size_","imageStyle_","fillStyle_","textStyle_","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","webgl_Layer","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","ImageLayer_WebGLImageLayerRenderer","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","webgl_ImageLayer","webgl_Map","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","depth","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","imageTile","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","layerState$1","hasFeature","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","tilecoord_hash","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","tmpTileCoord","TileGrid_TileGrid","opt_func","opt_strict","currentVal","res","isSorted","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createXYZ","xyzOptions","gridOptions","extentFromProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","opt_projection","worldsAway","tilegrid_wrapX","withinExtentAndZ","TileSourceEvent","source_Tile","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","TileLayer_WebGLTileLayerRenderer","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","framebufferExtent","tilePixelResolution","tileRangeSize","roundUpToPowerOfTwo","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","webgl_TileLayer","VectorLayer_WebGLVectorLayerRenderer","WebGLVectorLayerRenderer","layerState_","SCISSOR_TEST","scissor","webgl_VectorLayer","ol_WebGLMap","WebGLMap","FormatType","ARRAY_BUFFER","JSON","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","Image_ImageStyle","getSnapToPixel","getHitDetectionImageSize","setRotateWithView","setSnapToPixel","style_Image","style_RegularShape","ImageStyle","RegularShape","checksums_","hitDetectionCanvas_","points","radius1","radius2_","radius2","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getPoints","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","angle0","radiusC","strokeChecksum","fillChecksum","checksum","style_Circle","CircleStyle","setRadius","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","IconOrigin","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setImage","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","style_Style","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","TileEventType","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","defaultTileLoadFunction","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","source_XYZ","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","VectorSourceEvent","opt_feature","Vector","VectorSource","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","uri","keyParams","encodeURIComponent","qs","source_ImageArcGISRest","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","Static","imageExtent_","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","version","ATTRIBUTION","source_OSM","OSM","Image_ImageLayer","ImageLayer","layer_Image","TileProperty","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","RasterEventType","RasterOperationType","PIXEL","RasterSourceEvent","sharedContext","Raster_createRenderer","layerOrSource","createTileRenderer","createImageRenderer","Raster","RasterSource","worker_","operationType_","operationType","threads_","renderers_","createRenderers","Raster_getLayerStatesArray","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_tileUrlFunction","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","attributionExtent","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","ol_VectorImageTile","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","errorSourceTiles","empty","defaultLoadFunction","onLoad","onError","DEFAULT_EXTENT","ol_VectorTile","VectorTile","features_","replayGroups_","setFeatures","source_VectorTile","tileGrids_","WMTSRequestEncoding","KVP","REST","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","TierSizeCalculation","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","Vector_Property","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","toFunction","layer_Vector","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","VectorTile_VectorTileLayer","VectorTileLayer","layer_VectorTile","DragAndDropEventType","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","geom_MultiLineString","lineStrings","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","geom_MultiPoint","appendPoint","getPoint","center_linearRingss","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","Extent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","Modify_getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","Select_getDefaultStyleFunction","featureOverlay_","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","isCircle","closestOnCircle","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","oldMap","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformWithOptions","transformed","decimals","getObject","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","EsriJSON_readGeometry","esriJSONPolygon","flatRing","outerRings","matched","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","EsriJSON_writeGeometry","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","featureTypes","ii$1","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","test","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32","http://www.opengis.net/gml/3.2","format_GML32","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","GPX_appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","KML_readLineString","KML_readLinearRing","KML_readPoint","KML_readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","location","fs","readName","readNameFromDocument","readNameFromNode","n$1","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","coord","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","d$1","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","pbf_default","pbfLayers","pbfLayer","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","format_TopoJSON","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","Filter_Filter","tagName_","getTagName","filter_Filter","filter_LogicalNary","Filter","LogicalNary","conditions","filter_And","And","filter_Bbox","Bbox","filter_Spatial","Spatial","filter_Contains","Contains","filter_Comparison","Comparison","propertyName","filter_During","During","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","filter_EqualTo","EqualTo","filter_GreaterThan","GreaterThan","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","filter_Intersects","Intersects","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","filter_IsNull","IsNull","filter_LessThan","LessThan","filter_LessThanOrEqualTo","LessThanOrEqualTo","filter_Not","Not","filter_NotEqualTo","NotEqualTo","filter_Or","Or","filter_Within","Within","and","filter_bbox","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","lexer","lexer_","token_","layout_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","GeometryEncoder","components","geoms","encode","enc","geometryEncoder","encodeGeometryLayout","format_WKT","WKT","splitCollection_","splitCollection","parse_","NAMESPACE_URI","readHref","XML_XML","readFromDocument","readFromNode","format_XML","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","loadingstrategy","proj4","webgl","sphere","Graticule","unByKey","createStringXY","toStringHDMS","upAndDown","click","doubleClick","platformModifierKeyOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","inherits","childCtor","parentCtor","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","sphere_getLength","AtlasManager","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = (function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/Geolocation\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @enum {string}\n */\nvar Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = (function (Event) {\n  function GeolocationError(error) {\n    Event.call(this, EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n\n  if ( Event ) GeolocationError.__proto__ = Event;\n  GeolocationError.prototype = Object.create( Event && Event.prototype );\n  GeolocationError.prototype.constructor = GeolocationError;\n\n  return GeolocationError;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = (function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(Property.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(Property.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(Property.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    this.setTracking(false);\n    this.dispatchEvent(new GeolocationError(error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(Property.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n\n  var geoA = interpolate(0);\n  var geoB = interpolate(1);\n\n  var a = transform(geoA);\n  var b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var stack = [b, a];\n  /** @type {Array<number>} */\n  var fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  var fractions = {};\n\n  var maxIterations = 1e5;\n  var geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  var geoProjection = getProjection('EPSG:4326');\n\n  var cosLat1 = Math.cos(toRadians(lat1));\n  var sinLat1 = Math.sin(toRadians(lat1));\n  var cosLat2 = Math.cos(toRadians(lat2));\n  var sinLat2 = Math.sin(toRadians(lat2));\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      var D = frac * Math.acos(d);\n      var cosD = Math.cos(D);\n      var sinD = Math.sin(D);\n      var y = sinDeltaLon * cosLat2;\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      var theta = Math.atan2(y, x);\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n//# sourceMappingURL=geodesic.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./PluggableMap.js\").default} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nvar Graticule = function Graticule(opt_options) {\n  var options = opt_options || {};\n\n  /**\n   * @type {import(\"./PluggableMap.js\").default}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?import(\"./events.js\").EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {import(\"./proj/Projection.js\").default}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array<LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array<LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array<GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array<GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\n  var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      var textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {LineString} lineString Meridian\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  var lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  var coordinate = [flatCoordinates[0], lat];\n  var point;\n  if (index in this.meridiansLabels_) {\n    point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\n  var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      var textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {LineString} lineString Parallels.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  var lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  var coordinate = [lon, flatCoordinates[1]];\n  var point;\n  if (index in this.parallelsLabels_) {\n    point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\n    var this$1 = this;\n\n\n  var interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  var centerLonLat = this.toLonLatTransform_(center);\n  var centerLon = centerLonLat[0];\n  var centerLat = centerLonLat[1];\n  var maxLines = this.maxLines_;\n  var cnt, idx, lat, lon;\n\n  var validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  var maxLat = validExtent[3];\n  var maxLon = validExtent[2];\n  var minLat = validExtent[1];\n  var minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this$1.minLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this$1.maxLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this$1.minLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this$1.maxLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function getInterval_ (resolution) {\n    var this$1 = this;\n\n  var centerLon = this.projectionCenterLonLat_[0];\n  var centerLat = this.projectionCenterLonLat_[1];\n  var interval = -1;\n  var target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array<number>} **/\n  var p1 = [];\n  /** @type {Array<number>} **/\n  var p2 = [];\n  for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n    var delta = this$1.intervals_[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this$1.fromLonLatTransform_(p1, p1);\n    this$1.fromLonLatTransform_(p2, p2);\n    var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = this$1.intervals_[i];\n  }\n  return interval;\n};\n\n/**\n * Get the map associated with this graticule.\n * @return {import(\"./PluggableMap.js\").default} The map.\n * @api\n */\nGraticule.prototype.getMap = function getMap () {\n  return this.map_;\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\n  var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  var lineString = this.meridians_[index];\n  if (!lineString) {\n    lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of meridians.Meridians are lines of equal longitude.\n * @return {Array<LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function getMeridians () {\n  return this.meridians_;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\n  var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  var lineString = this.parallels_[index];\n  if (!lineString) {\n    lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of parallels.Parallels are lines of equal latitude.\n * @return {Array<LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function getParallels () {\n  return this.parallels_;\n};\n\n/**\n * @param {import(\"./render/Event.js\").default} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function handlePostCompose_ (e) {\n    var this$1 = this;\n\n  var vectorContext = e.vectorContext;\n  var frameState = e.frameState;\n  var extent = frameState.extent;\n  var viewState = frameState.viewState;\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  var updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  var i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this$1.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this$1.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  var labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this$1.meridiansLabels_[i];\n      this$1.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this$1.parallelsLabels_[i];\n      this$1.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var worldExtent = projection.getWorldExtent();\n  var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n/**\n * Set the map for this graticule.The graticule will be rendered on the\n * provided map.\n * @param {import(\"./PluggableMap.js\").default} map Map.\n * @api\n */\nGraticule.prototype.setMap = function setMap (map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\n\nexport default Graticule;\n\n//# sourceMappingURL=Graticule.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    var this$1 = this;\n\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this$1.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this$1.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this$1);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = (function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Shader\n */\nimport {abstract} from '../util.js';\n\n/**\n * @abstract\n */\nvar WebGLShader = function WebGLShader(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = function isAnimated () {\n  return false;\n};\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function getSource () {\n  return this.source_;\n};\n\n\nexport default WebGLShader;\n\n//# sourceMappingURL=Shader.js.map","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLFragment = (function (WebGLShader) {\n  function WebGLFragment(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLFragment.__proto__ = WebGLShader;\n  WebGLFragment.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLFragment.prototype.constructor = WebGLFragment;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLFragment.prototype.getType = function getType () {\n    return FRAGMENT_SHADER;\n  };\n\n  return WebGLFragment;\n}(WebGLShader));\n\n\nexport default WebGLFragment;\n\n//# sourceMappingURL=Fragment.js.map","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLVertex = (function (WebGLShader) {\n  function WebGLVertex(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLVertex.__proto__ = WebGLShader;\n  WebGLVertex.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLVertex.prototype.constructor = WebGLVertex;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVertex.prototype.getType = function getType () {\n    return VERTEX_SHADER;\n  };\n\n  return WebGLVertex;\n}(WebGLShader));\n\n\nexport default WebGLVertex;\n\n//# sourceMappingURL=Vertex.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/render/webgl/Replay\n */\nimport {abstract} from '../../util.js';\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nvar WebGLReplay = (function (VectorContext) {\n  function WebGLReplay(tolerance, maxExtent) {\n    VectorContext.call(this);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?import(\"../../webgl/Buffer.js\").default}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array<import(\"../../Feature.js\").default|import(\"../Feature.js\").default>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?import(\"../../webgl/Buffer.js\").default}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {import(\"./LineStringReplay.js\").default|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  if ( VectorContext ) WebGLReplay.__proto__ = VectorContext;\n  WebGLReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLReplay.prototype.constructor = WebGLReplay;\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLReplay.prototype.finish = function finish (context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import(\"./circlereplay/defaultshader/Locations.js\").default|\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\n     import(\"./texturereplay/defaultshader/Locations.js\").default} Locations.\n   */\n  WebGLReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"./circlereplay/defaultshader/Locations.js\").default|\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\n     import(\"./texturereplay/defaultshader/Locations.js\").default} locations Locations.\n   */\n  WebGLReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  WebGLReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    return abstract();\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplay = function drawHitDetectionReplay (gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayAll = function drawHitDetectionReplayAll (gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    var result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var gl = context.getGL();\n    var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    var result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  WebGLReplay.prototype.drawElements = function drawElements (gl, context, start, end) {\n    var elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n\n  return WebGLReplay;\n}(VectorContext));\n\n\nexport default WebGLReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport var triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nvar WebGLBuffer = function WebGLBuffer(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n/**\n * @return {Array<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function getArray () {\n  return this.arr_;\n};\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function getUsage () {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from './circlereplay/defaultshader.js';\nimport Locations from './circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from './Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLCircleReplay = (function (WebGLReplay) {\n  function WebGLCircleReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./circlereplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<Array<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         strokeColor: (Array<number>|null),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLCircleReplay.__proto__ = WebGLReplay;\n  WebGLCircleReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLCircleReplay.prototype.constructor = WebGLCircleReplay;\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLCircleReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    var n = numVertices / 4;\n    var i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 0;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 1;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 2;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 3;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n      this$1.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var radius = circleGeometry.getRadius();\n    var stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      var flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          var lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLCircleReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the import(\"../../webgl/Context.js\").WebGLContext\n    // object.\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n        this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLCircleReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLCircleReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  WebGLCircleReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  };\n\n  return WebGLCircleReplay;\n}(WebGLReplay));\n\n\nexport default WebGLCircleReplay;\n\n//# sourceMappingURL=CircleReplay.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nvar WebGLContext = (function (Disposable) {\n  function WebGLContext(canvas, gl) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  if ( Disposable ) WebGLContext.__proto__ = Disposable;\n  WebGLContext.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLContext.prototype.constructor = WebGLContext;\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLContext.prototype.bindBuffer = function bindBuffer (target, buf) {\n    var gl = this.getGL();\n    var arr = buf.getArray();\n    var bufferKey = getUid(buf);\n    if (bufferKey in this.bufferCache_) {\n      var bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      var /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  };\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLContext.prototype.deleteBuffer = function deleteBuffer (buf) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buf);\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLContext.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    unlistenAll(this.canvas_);\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (var key in this$1.bufferCache_) {\n        gl.deleteBuffer(this$1.bufferCache_[key].buffer);\n      }\n      for (var key$1 in this$1.programCache_) {\n        gl.deleteProgram(this$1.programCache_[key$1]);\n      }\n      for (var key$2 in this$1.shaderCache_) {\n        gl.deleteShader(this$1.shaderCache_[key$2]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  WebGLContext.prototype.getCanvas = function getCanvas () {\n    return this.canvas_;\n  };\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLContext.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  WebGLContext.prototype.getHitDetectionFramebuffer = function getHitDetectionFramebuffer () {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  };\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {import(\"./Shader.js\").default} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  WebGLContext.prototype.getShader = function getShader (shaderObject) {\n    var shaderKey = getUid(shaderObject);\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      var gl = this.getGL();\n      var shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  };\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {import(\"./Fragment.js\").default} fragmentShaderObject Fragment shader.\n   * @param {import(\"./Vertex.js\").default} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  WebGLContext.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      var gl = this.getGL();\n      var program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n  };\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  WebGLContext.prototype.initHitDetectionFramebuffer_ = function initHitDetectionFramebuffer_ () {\n    var gl = this.gl_;\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    var texture = createEmptyTexture(gl, 1, 1);\n    var renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  };\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLContext.prototype.useProgram = function useProgram (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  };\n\n  return WebGLContext;\n}(Disposable));\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n\n//# sourceMappingURL=Context.js.map","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {abstract, getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from './texturereplay/defaultshader.js';\nimport Locations from './texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from './Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nvar WebGLTextureReplay = (function (WebGLReplay) {\n  function WebGLTextureReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"./texturereplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  if ( WebGLReplay ) WebGLTextureReplay.__proto__ = WebGLReplay;\n  WebGLTextureReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLTextureReplay.prototype.constructor = WebGLTextureReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var textures = this.getTextures(true);\n    var gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        var i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  WebGLTextureReplay.prototype.drawCoordinates = function drawCoordinates (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var anchorX = /** @type {number} */ (this.anchorX);\n    var anchorY = /** @type {number} */ (this.anchorY);\n    var height = /** @type {number} */ (this.height);\n    var imageHeight = /** @type {number} */ (this.imageHeight);\n    var imageWidth = /** @type {number} */ (this.imageWidth);\n    var opacity = /** @type {number} */ (this.opacity);\n    var originX = /** @type {number} */ (this.originX);\n    var originY = /** @type {number} */ (this.originY);\n    var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    var rotation = /** @type {number} */ (-this.rotation);\n    var scale = /** @type {number} */ (this.scale);\n    var width = /** @type {number} */ (this.width);\n    var cos = Math.cos(rotation);\n    var sin = Math.sin(rotation);\n    var numIndices = this.indices.length;\n    var numVertices = this.vertices.length;\n    var i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this$1.origin[0];\n      y = flatCoordinates[i + 1] - this$1.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  };\n\n  /**\n   * @protected\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  WebGLTextureReplay.prototype.createTextures = function createTextures (textures, images, texturePerImage, gl) {\n    var texture, image, uid, i;\n    var ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image);\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      var i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        var end = groupIndices[i];\n        this$1.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  };\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<number>} groupIndices Texture group indices.\n   */\n  WebGLTextureReplay.prototype.drawReplaySkipping = function drawReplaySkipping (gl, context, skippedFeaturesHash, textures, groupIndices) {\n    var this$1 = this;\n\n    var featureIndex = 0;\n\n    var i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      var groupEnd = groupIndices[i];\n\n      var start = groupStart;\n      var end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        var feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this$1.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this$1.drawElements(gl, context, start, end);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, groupStart, start, end, feature;\n    var featureIndex = this.startIndices.length - 1;\n    var hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this$1.hitDetectionGroupIndices[i - 1] : 0;\n      end = this$1.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.finish = function finish (context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @return {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getTextures = function getTextures (opt_all) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @return {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return abstract();\n  };\n\n  return WebGLTextureReplay;\n}(WebGLReplay));\n\n\nexport default WebGLTextureReplay;\n\n//# sourceMappingURL=TextureReplay.js.map","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from './TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLImageReplay = (function (WebGLTextureReplay) {\n  function WebGLImageReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLImageReplay.__proto__ = WebGLTextureReplay;\n  WebGLImageReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLImageReplay.prototype.constructor = WebGLImageReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    var indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    var anchor = imageStyle.getAnchor();\n    var image = imageStyle.getImage(1);\n    var imageSize = imageStyle.getImageSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var opacity = imageStyle.getOpacity();\n    var origin = imageStyle.getOrigin();\n    var rotateWithView = imageStyle.getRotateWithView();\n    var rotation = imageStyle.getRotation();\n    var size = imageStyle.getSize();\n    var scale = imageStyle.getScale();\n\n    var currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getTextures = function getTextures (opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.hitDetectionTextures_;\n  };\n\n  return WebGLImageReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n\n//# sourceMappingURL=topology.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from './Replay.js';\nimport {fragment, vertex} from './linestringreplay/defaultshader.js';\nimport Locations from './linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nvar WebGLLineStringReplay = (function (WebGLReplay) {\n  function WebGLLineStringReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./linestringreplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLLineStringReplay.__proto__ = WebGLReplay;\n  WebGLLineStringReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLLineStringReplay.prototype.constructor = WebGLLineStringReplay;\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n\n    var i, ii;\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    var lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    var closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    var startCoords, sign, n;\n    var lastIndex = numIndices;\n    var lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    var p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this$1.indices[numIndices++] = n;\n          this$1.indices[numIndices++] = lastIndex - 1;\n          this$1.indices[numIndices++] = lastIndex;\n\n          this$1.indices[numIndices++] = lastIndex;\n          this$1.indices[numIndices++] = n + 1;\n          this$1.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastIndex - 1;\n        this$1.indices[numIndices++] = lastIndex;\n\n        this$1.indices[numIndices++] = n + 2;\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this$1.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this$1.indices[numIndices++] = n + 1;\n        this$1.indices[numIndices++] = n + 3;\n        this$1.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  };\n\n  /**\n   * @param {Array<number>} p0 Last coordinates.\n   * @param {Array<number>} p1 Current coordinates.\n   * @param {Array<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.addVertices_ = function addVertices_ (p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  };\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.isValid_ = function isValid_ (flatCoordinates, offset, end, stride) {\n    var range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var indexCount = this.indices.length;\n    var ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this$1.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          var lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this$1.origin[0], -this$1.origin[1]);\n          this$1.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawPolygonCoordinates = function drawPolygonCoordinates (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this$1.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  WebGLLineStringReplay.prototype.setPolygonStyle = function setPolygonStyle (feature, opt_index) {\n    var index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  };\n\n  /**\n   * @return {number} Current index.\n   */\n  WebGLLineStringReplay.prototype.getCurrentIndex = function getCurrentIndex () {\n    return this.indices.length;\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLLineStringReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLLineStringReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  WebGLLineStringReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    var strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    var strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  };\n\n  return WebGLLineStringReplay;\n}(WebGLReplay));\n\n\nexport default WebGLLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev]\n * @property {Item} [next]\n * @property {?} data\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nvar LinkedList = function LinkedList(opt_circular) {\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function insertItem (data) {\n\n  /** @type {Item} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function removeItem () {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function firstItem () {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function lastItem () {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function nextItem () {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function getNextItem () {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function prevItem () {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function getPrevItem () {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function getCurrItem () {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function setFirstItem () {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function concat (list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function getLength () {\n  return this.length_;\n};\n\n\nexport default LinkedList;\n\n//# sourceMappingURL=LinkedList.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from './polygonreplay/defaultshader.js';\nimport Locations from './polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from './LineStringReplay.js';\nimport WebGLReplay from './Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {PolygonVertex} p0\n * @property {PolygonVertex} p1\n */\n\n\nvar WebGLPolygonReplay = (function (WebGLReplay) {\n  function WebGLPolygonReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./polygonreplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLPolygonReplay.__proto__ = WebGLReplay;\n  WebGLPolygonReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLPolygonReplay.prototype.constructor = WebGLPolygonReplay;\n\n  /**\n   * Draw one polygon.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  WebGLPolygonReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    // Triangulate the polygon\n    var outerRing = new LinkedList();\n    var rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    var maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      var holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        var holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this$1.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this$1.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this$1.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        var currList = holeLists[i].list;\n        var start = currList.firstItem();\n        var currItem = start;\n        var intersection = (void 0);\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this$1.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this$1.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this$1.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  };\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  WebGLPolygonReplay.prototype.processFlatCoordinates_ = function processFlatCoordinates_ (flatCoordinates, stride, list, rtree, clockwise) {\n    var this$1 = this;\n\n    var isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    var i, ii;\n    var n = this.vertices.length / 2;\n    /** @type {PolygonVertex} */\n    var start;\n    /** @type {PolygonVertex} */\n    var p0;\n    /** @type {PolygonVertex} */\n    var p1;\n    var extents = [];\n    var segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      var end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  };\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygons ring.\n   * @return {Array<number>} Max X coordinates.\n   */\n  WebGLPolygonReplay.prototype.getMaxCoords_ = function getMaxCoords_ (list) {\n    var start = list.firstItem();\n    var seg = start;\n    var maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  };\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  WebGLPolygonReplay.prototype.classifyPoints_ = function classifyPoints_ (list, rtree, ccw) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var pointsReclassified = false;\n    do {\n      var reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this$1.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  WebGLPolygonReplay.prototype.bridgeHole_ = function bridgeHole_ (hole, holeMaxX, list, listMaxX, rtree) {\n    var this$1 = this;\n\n    var seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    var p1 = seg.p1;\n    /** @type {PolygonVertex} */\n    var p2 = {x: listMaxX, y: p1.y, i: -1};\n    var minDist = Infinity;\n    var i, ii, bestPoint;\n    /** @type {PolygonVertex} */\n    var p5;\n\n    var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      var currSeg = intersectingSegments[i];\n      var intersection = this$1.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      var dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        var theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          var currPoint = pointsInTriangle[i];\n          var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.triangulate_ = function triangulate_ (list, rtree) {\n    var this$1 = this;\n\n    var ccw = false;\n    var simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this$1.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this$1.resolveSelfIntersections_(list, rtree)) {\n              simple = this$1.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this$1.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this$1.isClockwise_(list);\n                this$1.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      var numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  WebGLPolygonReplay.prototype.clipEars_ = function clipEars_ (list, rtree, simple, ccw) {\n    var this$1 = this;\n\n    var numIndices = this.indices.length;\n    var start = list.firstItem();\n    var s0 = list.getPrevItem();\n    var s1 = start;\n    var s2 = list.nextItem();\n    var s3 = list.getNextItem();\n    var p0, p1, p2;\n    var processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        var variableCriterion = (void 0);\n        if (simple) {\n          variableCriterion = this$1.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this$1.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this$1.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this$1.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this$1.indices[numIndices++] = p0.i;\n            this$1.indices[numIndices++] = p1.i;\n            this$1.indices[numIndices++] = p2.i;\n            this$1.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  WebGLPolygonReplay.prototype.resolveSelfIntersections_ = function resolveSelfIntersections_ (list, rtree, opt_touch) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    list.nextItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var resolvedIntersections = false;\n\n    do {\n      var intersection = this$1.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        var breakCond = false;\n        var numVertices = this$1.vertices.length;\n        var numIndices = this$1.indices.length;\n        var n = numVertices / 2;\n        var seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        var p = (void 0);\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this$1.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this$1.indices[numIndices++] = seg.p0.i;\n        this$1.indices[numIndices++] = seg.p1.i;\n        this$1.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  WebGLPolygonReplay.prototype.isSimple_ = function isSimple_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var seg = start;\n    do {\n      if (this$1.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  WebGLPolygonReplay.prototype.isClockwise_ = function isClockwise_ (list) {\n    var length = list.getLength() * 2;\n    var flatCoordinates = new Array(length);\n    var start = list.firstItem();\n    var seg = start;\n    var i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.splitPolygon_ = function splitPolygon_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    do {\n      var intersections = this$1.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        var s1 = intersections[0];\n        var n = this$1.vertices.length / 2;\n        var intersection = this$1.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        var p = this$1.createPoint_(intersection[0], intersection[1], n);\n        var newPolygon = new LinkedList();\n        var newRtree = new RBush();\n        this$1.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        var currItem = list.nextItem();\n        while (currItem !== s1) {\n          this$1.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this$1.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this$1.classifyPoints_(list, rtree, false);\n        this$1.triangulate_(list, rtree);\n        this$1.classifyPoints_(newPolygon, newRtree, false);\n        this$1.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  };\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {PolygonVertex} List item.\n   */\n  WebGLPolygonReplay.prototype.createPoint_ = function createPoint_ (x, y, i) {\n    var numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {PolygonVertex} */\n    var p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point of segment.\n   * @param {PolygonVertex} p1 Second point of segment.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default=} opt_rtree Insert the segment into the R-Tree.\n   * @return {PolygonSegment} segment.\n   */\n  WebGLPolygonReplay.prototype.insertItem_ = function insertItem_ (p0, p1, list, opt_rtree) {\n    var seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  };\n\n  /**\n    * @private\n    * @param {PolygonSegment} s0 Segment before the remove candidate.\n    * @param {PolygonSegment} s1 Remove candidate segment.\n    * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n    * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n    */\n  WebGLPolygonReplay.prototype.removeItem_ = function removeItem_ (s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array<PolygonVertex>} Points in the triangle.\n   */\n  WebGLPolygonReplay.prototype.getPointsInTriangle_ = function getPointsInTriangle_ (p0, p1, p2, rtree, opt_reflex) {\n    var result = [];\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (var j in segmentsInExtent[i]) {\n        var p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @private\n   * @param {PolygonSegment} segment Segment.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<PolygonSegment>} Intersecting segments.\n   */\n  WebGLPolygonReplay.prototype.getIntersections_ = function getIntersections_ (segment, rtree, opt_touch) {\n    var this$1 = this;\n\n    var p0 = segment.p0;\n    var p1 = segment.p1;\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    var result = [];\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      var currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this$1.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<number>|undefined} Intersection coordinates.\n   */\n  WebGLPolygonReplay.prototype.calculateIntersection_ = function calculateIntersection_ (p0, p1, p2, p3, opt_touch) {\n    var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {PolygonVertex} p1 Start point of the diagonal.\n   * @param {PolygonVertex} p2 Ear candidate.\n   * @param {PolygonVertex} p3 End point of the diagonal.\n   * @param {PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  WebGLPolygonReplay.prototype.diagonalIsInside_ = function diagonalIsInside_ (p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var endss = multiPolygonGeometry.getEndss();\n    var stride = multiPolygonGeometry.getStride();\n    var currIndex = this.indices.length;\n    var currLineIndex = this.lineStringReplay.getCurrentIndex();\n    var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    var i, ii, j, jj;\n    var start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      if (ends.length > 0) {\n        var outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this$1.origin[0], -this$1.origin[1]);\n        if (outerRing.length) {\n          var holes = [];\n          var holeFlatCoords = (void 0);\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this$1.origin[0], -this$1.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this$1.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this$1.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var this$1 = this;\n\n    var ends = polygonGeometry.getEnds();\n    var stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      var outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this$1.origin[0], -this$1.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLPolygonReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, nextStyle);\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLPolygonReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLPolygonReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      var nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        width: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  };\n\n  return WebGLPolygonReplay;\n}(WebGLReplay));\n\n\nexport default WebGLPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this$1.emptyBlocks_[i];\n    if (block.width >= width + this$1.space_ &&\n        block.height >= height + this$1.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this$1.space_,\n        offsetY: block.y + this$1.space_,\n        image: this$1.canvas_\n      };\n      this$1.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this$1.context_,\n        block.x + this$1.space_, block.y + this$1.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this$1.split_(i, block, width + this$1.space_, height + this$1.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {AtlasBlock} */\n  var newBlock1;\n  /** @type {AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {AtlasBlock} newBlock1 The 1st block to add.\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = /** @type {Array<*>} */ ([index, 1]);\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from './Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this$1.currentHitSize_ * 2, this$1.maxSize_);\n        this$1.currentHitSize_ = size;\n      } else {\n        size = Math.min(this$1.currentSize_ * 2, this$1.maxSize_);\n        this$1.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this$1.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from './TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {import(\"../../style/AtlasManager.js\").default} atlas\n * @property {Object<string, number>} width\n * @property {number} height\n */\n\n\nvar WebGLTextReplay = (function (WebGLTextureReplay) {\n  function WebGLTextReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object<string, GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLTextReplay.__proto__ = WebGLTextureReplay;\n  WebGLTextReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLTextReplay.prototype.constructor = WebGLTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    if (this.text_) {\n      var flatCoordinates = null;\n      var offset = 0;\n      var end = 2;\n      var stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      var glyphAtlas = this.currAtlas_;\n      var lines = this.text_.split('\\n');\n      var textSize = this.getTextSize_(lines);\n      var i, ii, j, jj, currX, currY, charArr, charInfo;\n      var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            var image = charInfo.image;\n\n            this$1.anchorX = anchorX - currX;\n            this$1.anchorY = anchorY - currY;\n            this$1.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this$1.originY = charInfo.offsetY;\n            this$1.height = glyphAtlas.height;\n            this$1.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this$1.imageHeight = image.height;\n            this$1.imageWidth = image.width;\n\n            if (this$1.images_.length === 0) {\n              this$1.images_.push(image);\n            } else {\n              var currentImage = this$1.images_[this$1.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this$1.groupIndices.push(this$1.indices.length);\n                this$1.images_.push(image);\n              }\n            }\n\n            this$1.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this$1.width;\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Array<string>} lines Label to draw split to lines.\n   * @return {Array<number>} Size of the label in pixels.\n   */\n  WebGLTextReplay.prototype.getTextSize_ = function getTextSize_ (lines) {\n    var self = this;\n    var glyphAtlas = this.currAtlas_;\n    var textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    var textWidth = lines.map(function(str) {\n      var sum = 0;\n      for (var i = 0, ii = str.length; i < ii; ++i) {\n        var curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  };\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLTextReplay.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    for (var i = offset, ii = end; i < ii; i += stride) {\n      this$1.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  WebGLTextReplay.prototype.addCharToAtlas_ = function addCharToAtlas_ (char) {\n    if (char.length === 1) {\n      var glyphAtlas = this.currAtlas_;\n      var state = this.state_;\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /** @type {CanvasLineCap} */ (state.lineCap);\n          ctx.lineJoin = /** @type {CanvasLineJoin} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.setTextStyle = function setTextStyle (textStyle) {\n    var state = this.state_;\n    var textFillStyle = textStyle.getFill();\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        var lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      var textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      var textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {GlyphAtlas} Glyph atlas.\n   */\n  WebGLTextReplay.prototype.getAtlas_ = function getAtlas_ (state) {\n    var params = [];\n    for (var i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    var hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  };\n\n  /**\n   * @private\n   * @param {Array<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  WebGLTextReplay.prototype.calculateHash_ = function calculateHash_ (params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    var hash = '';\n    for (var i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getTextures = function getTextures (opt_all) {\n    return this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.textures_;\n  };\n\n  return WebGLTextReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from './CircleReplay.js';\nimport WebGLImageReplay from './ImageReplay.js';\nimport WebGLLineStringReplay from './LineStringReplay.js';\nimport WebGLPolygonReplay from './PolygonReplay.js';\nimport WebGLTextReplay from './TextReplay.js';\n\n/**\n * @type {Array<number>}\n */\nvar HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object<import(\"../ReplayType.js\").default, typeof import(\"./Replay.js\").default>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nvar WebGLReplayGroup = (function (ReplayGroup) {\n  function WebGLReplayGroup(tolerance, maxExtent, opt_renderBuffer) {\n    ReplayGroup.call(this);\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string,\n     *        Object<import(\"../ReplayType.js\").default, import(\"./Replay.js\").default>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  if ( ReplayGroup ) WebGLReplayGroup.__proto__ = ReplayGroup;\n  WebGLReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  WebGLReplayGroup.prototype.constructor = WebGLReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    return [];\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplayGroup.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var this$1 = this;\n\n    var functions = [];\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      var arguments$1 = arguments;\n      var this$1 = this;\n\n      var length = functions.length;\n      var result;\n      for (var i = 0; i < length; i++) {\n        result = functions[i].apply(this$1, arguments$1);\n      }\n      return result;\n    };\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLReplayGroup.prototype.finish = function finish (context) {\n    var this$1 = this;\n\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLReplayGroup.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.replayHitDetection_ = function replayHitDetection_ (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    var i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  WebGLReplayGroup.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  };\n\n  return WebGLReplayGroup;\n}(ReplayGroup));\n\n\nexport default WebGLReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from './ReplayGroup.js';\n\nvar WebGLImmediateRenderer = (function (VectorContext) {\n  function WebGLImmediateRenderer(context, center, resolution, rotation, size, extent, pixelRatio) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Image.js\").default}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Fill.js\").default}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Stroke.js\").default}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Text.js\").default}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  if ( VectorContext ) WebGLImmediateRenderer.__proto__ = VectorContext;\n  WebGLImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLImmediateRenderer.prototype.constructor = WebGLImmediateRenderer;\n\n  /**\n   * @param {import(\"./ReplayGroup.js\").default} replayGroup Replay group.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @private\n   */\n  WebGLImmediateRenderer.prototype.drawText_ = function drawText_ (replayGroup, geometry) {\n    var context = this.context_;\n    var replay = /** @type {import(\"./TextReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry, data) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPoint = function drawPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawLineString = function drawLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawCircle = function drawCircle (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./CircleReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    this.imageStyle_ = imageStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    this.textStyle_ = textStyle;\n  };\n\n  return WebGLImmediateRenderer;\n}(VectorContext));\n\n\nexport default WebGLImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n\n//# sourceMappingURL=defaultmapshader.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/Layer\n */\nimport {abstract} from '../../util.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from './defaultmapshader.js';\nimport Locations from './defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\n/**\n * @abstract\n */\nvar WebGLLayerRenderer = (function (LayerRenderer) {\n  function WebGLLayerRenderer(mapRenderer, layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"./Map.js\").default}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Buffer.js\").default}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {import(\"./defaultmapshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  if ( LayerRenderer ) WebGLLayerRenderer.__proto__ = LayerRenderer;\n  WebGLLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLLayerRenderer.prototype.constructor = WebGLLayerRenderer;\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.bindFramebuffer = function bindFramebuffer (frameState, framebufferDimension) {\n\n    var gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      var postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n\n      var texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    var gl = context.getGL();\n\n    var program = context.getProgram(fragment, vertex);\n\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var viewState = frameState.viewState;\n      var resolution = viewState.resolution;\n      var pixelRatio = frameState.pixelRatio;\n      var extent = frameState.extent;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n      var size = frameState.size;\n\n      var render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getTexCoordMatrix = function getTexCoordMatrix () {\n    return this.texCoordMatrix;\n  };\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLLayerRenderer.prototype.getTexture = function getTexture () {\n    return this.texture;\n  };\n\n  /**\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getProjectionMatrix = function getProjectionMatrix () {\n    return this.projectionMatrix;\n  };\n\n  /**\n   * Handle webglcontextlost.\n   */\n  WebGLLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  WebGLLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  WebGLLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    return abstract();\n  };\n\n  return WebGLLayerRenderer;\n}(LayerRenderer));\n\n\nexport default WebGLLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nvar WebGLImageLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLImageLayerRenderer(mapRenderer, imageLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../../transform.js\").Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLImageLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLImageLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLImageLayerRenderer.prototype.constructor = WebGLImageLayerRenderer;\n\n  /**\n   * @param {import(\"../../ImageBase.js\").default} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLImageLayerRenderer.prototype.createTexture_ = function createTexture_ (image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    var imageElement = image.getImage();\n    var gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n\n    var gl = this.mapRenderer.getGL();\n\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var viewRotation = viewState.rotation;\n\n    var image = this.image_;\n    var texture = this.texture;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        var loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            var postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      var canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      var texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  };\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../coordinate.js\").Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {import(\"../../extent.js\").Extent} imageExtent Image extent.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function updateProjectionMatrix_ (\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    var canvasExtentWidth = canvasWidth * viewResolution;\n    var canvasExtentHeight = canvasHeight * viewResolution;\n\n    var projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    var imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n        frameState.size, imageSize);\n    }\n\n    var pixelOnFrameBuffer = applyTransform(\n      this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {import(\"../../size.js\").Size} mapSize The map size.\n   * @param {import(\"../../size.js\").Size} imageSize The image size.\n   * @return {import(\"../../transform.js\").Transform} The transformation matrix.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function getHitTransformationMatrix_ (mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    var mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    var projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    var transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  };\n\n  return WebGLImageLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLImageLayerRenderer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Image.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nvar WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @classdesc\n * WebGL map renderer.\n * @api\n */\nvar WebGLMapRenderer = (function (MapRenderer) {\n  function WebGLMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('canvas'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Context.js\").default}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {import(\"../../structs/LRUCache.js\").default<TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../structs/PriorityQueue.js\").default<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array<*>} element Element.\n       * @return {number} Priority.\n       * @this {WebGLMapRenderer}\n       */\n      (function(element) {\n        var tileCenter = /** @type {import(\"../../coordinate.js\").Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {import(\"../../Tile.js\").default} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {import(\"../../PluggableMap.js\").default} map Map.\n     * @param {?import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {WebGLMapRenderer}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            var element = this.tileTextureQueue_.dequeue();\n            var tile = /** @type {import(\"../../Tile.js\").default} */ (element[0]);\n            var tileSize = /** @type {import(\"../../size.js\").Size} */ (element[3]);\n            var tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  if ( MapRenderer ) WebGLMapRenderer.__proto__ = MapRenderer;\n  WebGLMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  WebGLMapRenderer.prototype.constructor = WebGLMapRenderer;\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../size.js\").Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  WebGLMapRenderer.prototype.bindTileTexture = function bindTileTexture (tile, tileSize, tileGutter, magFilter, minFilter) {\n    var gl = this.getGL();\n    var tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      var textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      var texture = gl.createTexture();\n      var imageTile = /** @type {import(\"../../ImageTile.js\").default} */ (tile);\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        var clipTileCanvas = this.clipTileContext_.canvas;\n        var clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(imageTile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, imageTile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  WebGLMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var context = this.context_;\n\n      var extent = frameState.extent;\n      var size = frameState.size;\n      var viewState = frameState.viewState;\n      var pixelRatio = frameState.pixelRatio;\n\n      var resolution = viewState.resolution;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n\n      var vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.disposeInternal = function disposeInternal () {\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    MapRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").default} map Map.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.expireCache_ = function expireCache_ (map, frameState) {\n    var this$1 = this;\n\n    var gl = this.getGL();\n    var textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this$1.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this$1.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this$1.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this$1.textureCache_.pop();\n    }\n  };\n\n  /**\n   * @return {import(\"../../webgl/Context.js\").default} The context.\n   */\n  WebGLMapRenderer.prototype.getContext = function getContext () {\n    return this.context_;\n  };\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  WebGLMapRenderer.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * @return {import(\"../../structs/PriorityQueue.js\").default<Array>} Tile texture queue.\n   */\n  WebGLMapRenderer.prototype.getTileTextureQueue = function getTileTextureQueue () {\n    return this.tileTextureQueue_;\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost (event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    var renderers = this.getLayerRenderers();\n    for (var id in renderers) {\n      var renderer = /** @type {import(\"./Layer.js\").default} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n    this.initializeGL_();\n    this.getMap().render();\n  };\n\n  /**\n   * @private\n   */\n  WebGLMapRenderer.prototype.initializeGL_ = function initializeGL_ () {\n    var gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  WebGLMapRenderer.prototype.isTileTextureLoaded = function isTileTextureLoaded (tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    var context = this.getContext();\n    var gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array<import(\"../../layer/Layer.js\").State>} */\n    var layerStatesToDraw = [];\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      var layerState$1 = layerStatesToDraw[i];\n      var layerRenderer$1 = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layerState$1.layer));\n      layerRenderer$1.composeFrame(frameState, layerState$1, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var this$1 = this;\n\n    var hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n    var result;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  return WebGLMapRenderer;\n}(MapRenderer));\n\n\nexport default WebGLMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n\n//# sourceMappingURL=tilelayershader.js.map","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileSource from '../../source/Tile.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {fragment, vertex} from './tilelayershader.js';\nimport Locations from './tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nvar WebGLTileLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLTileLayerRenderer(mapRenderer, tileLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Fragment.js\").default}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Vertex.js\").default}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {import(\"./tilelayershader/Locations.js\").default}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Buffer.js\").default}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLTileLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLTileLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLTileLayerRenderer.prototype.constructor = WebGLTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    var mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          var loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n    this.locations_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var this$1 = this;\n\n\n    var mapRenderer = this.mapRenderer;\n    var gl = context.getGL();\n\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = tileLayer.getSource();\n    if (!(tileSource instanceof TileSource)) {\n      return true;\n    }\n\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewState.resolution);\n    var tileResolution = tileGrid.getResolution(z);\n\n    var tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    var pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    var tilePixelResolution = tileResolution / pixelRatio;\n    var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutterForProjection(projection);\n\n    var center = viewState.center;\n    var extent = frameState.extent;\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    var framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      var tileRangeSize = tileRange.getSize();\n\n      var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      var framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      var origin = tileGrid.getOrigin(z);\n      var minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      var minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n       */\n      var tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      var allTilesLoaded = true;\n      var tmpExtent = createEmpty();\n      var tmpTileRange = new TileRange(0, 0, 0, 0);\n      var childTileRange, drawable, fullyLoaded, tile, tileState;\n      var x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      var u_tileOffset = new Float32Array(4);\n      for (var i = 0, ii = zs.length; i < ii; ++i) {\n        var tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (var tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n\n          if (!(tile instanceof ImageTile)) {\n            continue;\n          }\n\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this$1.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    var tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {import(\"../../Tile.js\").default} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    var texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    var pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    var pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    var pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    var gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    var imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLTileLayerRenderer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Tile.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * WebGL renderer for vector layers.\n * @api\n */\nvar WebGLVectorLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLVectorLayerRenderer(mapRenderer, vectorLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/webgl/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?import(\"../../layer/Layer.js\").State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLVectorLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLVectorLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLVectorLayerRenderer.prototype.constructor = WebGLVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    this.layerState_ = layerState;\n    var viewState = frameState.viewState;\n    var replayGroup = this.replayGroup_;\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    var gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      var context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layer = this.getLayer();\n      var layerState = this.layerState_;\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  WebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    var replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {WebGLVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of\n   *     styles.\n   * @param {import(\"../../render/webgl/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  WebGLVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  };\n\n  return WebGLVectorLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLVectorLayerRenderer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar WebGLMap = (function (PluggableMap) {\n  function WebGLMap(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) WebGLMap.__proto__ = PluggableMap;\n  WebGLMap.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  WebGLMap.prototype.constructor = WebGLMap;\n\n  WebGLMap.prototype.createRenderer = function createRenderer () {\n    var renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return WebGLMap;\n}(PluggableMap));\n\n\nexport default WebGLMap;\n\n//# sourceMappingURL=WebGLMap.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Element, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Element, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var this$1 = this;\n\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this$1, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = (function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = (function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = (function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = (function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var scale = this.hidpi_ ? 2 : 1;\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth / scale :\n      [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var viewState = frameState.viewState;\n        var tileGrid = this.getTileGrid();\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n        var zoom = tileCoord[0];\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = (function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = (function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var this$1 = this;\n\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this$1.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    var this$1 = this;\n\n    if (opt_fast) {\n      for (var featureId in this$1.featureChangeKeys_) {\n        var keys = this$1.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this$1.nullGeometryFeatures_) {\n          this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var this$1 = this;\n\n    var removed = false;\n    for (var id in this$1.idIndex_) {\n      if (this$1.idIndex_[id] === feature) {\n        delete this$1.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = (function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {Point} */ (feature.getGeometry());\n      assert(geometry.getType() == GeometryType.POINT,\n        10); // The default `geometryFunction` can only handle `Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {VectorSource}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    var this$1 = this;\n\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        var geometry = this$1.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this$1.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor);\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this$1.features.push(this$1.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var this$1 = this;\n\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this$1.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = (function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = (function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @api\n */\nvar ImageSource = (function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = (function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = (function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from './Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = (function (ImageSource) {\n  function ImageCanvasSource(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {import(\"../ImageCanvas.js\").default}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_.call(\n      this, extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = (function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = (function (ImageSource) {\n  function Static(options) {\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function getImageExtent () {\n    return this.imageExtent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = (function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar ImageLayer = (function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {import(\"../LayerType.js\").default}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from './Image.js';\nimport SourceState from './State.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = (function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nvar RasterSource = (function (ImageSource) {\n  function RasterSource(options) {\n    var this$1 = this;\n\n    ImageSource.call(this, {\n      projection: null\n    });\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../renderer/canvas/Layer.js\").default>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this$1.renderers_[r], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\n\n    /**\n     * @type {Object<string, import(\"../layer/Layer.js\").State>}\n     */\n    var layerStates = {};\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var this$1 = this;\n\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this$1.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var this$1 = this;\n\n    var frameState = this.requestedFrameState_;\n    var len = this.renderers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(\n        this$1.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {import(\"../renderer/canvas/Layer.js\").default} renderer Layer renderer.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array<import(\"../renderer/canvas/Layer.js\").default>} renderers Layer renderers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../renderer/canvas/Layer.js\").default>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  var len = sources.length;\n  var renderers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createRenderer(layerOrSource) {\n  var tileSource = /** @type {import(\"./Tile.js\").default} */ (layerOrSource);\n  var imageSource = /** @type {import(\"./Image.js\").default} */ (layerOrSource);\n  var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerOrSource);\n  var renderer = null;\n  if (typeof tileSource.getTile === 'function') {\n    renderer = createTileRenderer(tileSource);\n  } else if (typeof imageSource.getImage === 'function') {\n    renderer = createImageRenderer(imageSource);\n  } else if (layer.getType() === LayerType.TILE) {\n    renderer = new CanvasTileLayerRenderer(/** @type {import(\"../layer/Tile.js\").default} */ (layer));\n  } else if (layer.getType() == LayerType.IMAGE || layer.getType() == LayerType.VECTOR) {\n    renderer = new CanvasImageLayerRenderer(/** @type {import(\"../layer/Image.js\").default} */ (layer));\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {import(\"./Image.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createImageRenderer(source) {\n  var layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {import(\"./Tile.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createTileRenderer(source) {\n  var layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = (function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = (function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  var baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = (function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {import(\"../size.js\").Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = (function (TileSource) {\n  function TileDebug(options) {\n\n    TileSource.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(TileSource));\n\n\nexport default TileDebug;\n\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = (function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = (function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutter = function getGutter () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\n\nexport var CustomTile = (function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    return null;\n  };\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  CustomTile.prototype.getData = function getData (coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    var xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    var yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    var code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    var data = null;\n    if (code in this.keys_) {\n      var id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *)} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  CustomTile.prototype.forDataAtCoordinate = function forDataAtCoordinate (coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.handleError_ = function handleError_ () {\n    this.state = TileState.ERROR;\n    this.changed();\n  };\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  CustomTile.prototype.handleLoad_ = function handleLoad_ (json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.loadInternal_ = function loadInternal_ () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  CustomTile.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  CustomTile.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleError_();\n  };\n\n\n  /**\n   * @override\n   */\n  CustomTile.prototype.load = function load () {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  };\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = (function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  UTFGrid.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  UTFGrid.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  UTFGrid.prototype.getTemplate = function getTemplate () {\n    return this.template_;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*)} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  UTFGrid.prototype.forDataAtCoordinateAndResolution = function forDataAtCoordinateAndResolution (\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      var tile = /** @type {!CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  };\n\n\n  /**\n   * @protected\n   */\n  UTFGrid.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  UTFGrid.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    var grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      var tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UTFGrid;\n}(TileSource));\n\n\nexport default UTFGrid;\n\n//# sourceMappingURL=UTFGrid.js.map","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {VOID} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nvar VectorImageTile = (function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n    var this$1 = this;\n\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var resolution = tileGrid.getResolution(zoom);\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var useLoadedOnly = zoom != tileCoord[0];\n      var loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        var sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          var sourceTileKey = sourceTileCoord.toString();\n          var sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, VOID, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this$1.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      var sourceTileKey = this$1.tileKeys[i];\n      var sourceTile = this$1.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this$1.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorImageTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorImageTile.prototype.getImage = function getImage (layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.getKey = function getKey () {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  };\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {import(\"./VectorTile.js\").default} Source tile.\n   */\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\n    return this.sourceTiles_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.load = function load () {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    var leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    var errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        var sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\n            var state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              var uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  };\n\n  /**\n   * @private\n   */\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\n    var this$1 = this;\n\n    var loaded = this.tileKeys.length;\n    var empty = 0;\n    for (var i = loaded - 1; i >= 0; --i) {\n      var state = this$1.getTile(this$1.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  };\n\n  return VectorImageTile;\n}(Tile));\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"./VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\n//# sourceMappingURL=VectorImageTile.js.map","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {import(\"./extent.js\").Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\nvar VectorTile = (function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./render/ReplayGroup.js\").default>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {import(\"./proj/Projection.js\").default} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @return {import(\"./render/ReplayGroup.js\").default} Replay group.\n   */\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {import(\"./extent.js\").Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {import(\"./proj/Projection.js\").default} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @param {import(\"./render/ReplayGroup.js\").default} replayGroup Replay group.\n   */\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   }\n * });\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = (function (UrlTile) {\n  function VectorTile(options) {\n    var projection = options.projection || 'EPSG:3857';\n\n    var extent = options.extent || extentFromProjection(projection);\n\n    var tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom || 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n       * @private\n       * @type {Object<string, Tile>}\n       */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n  if ( UrlTile ) VectorTile.__proto__ = UrlTile;\n  VectorTile.prototype = Object.create( UrlTile && UrlTile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorTile.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  VectorTile.prototype.clear = function clear () {\n    this.tileCache.clear();\n    this.sourceTiles_ = {};\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord, projection);\n      var tile = new VectorImageTile(\n        tileCoord,\n        urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n        this.getRevision(),\n        this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n        this.tileGrid, this.getTileGridForProjection(projection),\n        this.sourceTiles_, pixelRatio, projection, this.tileClass,\n        this.handleTileChange.bind(this), tileCoord[0]);\n\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTileGridForProjection = function getTileGridForProjection (projection) {\n    var code = projection.getCode();\n    var tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      var sourceTileGrid = this.tileGrid;\n      tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n    }\n    return tileGrid;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return pixelRatio;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n  };\n\n  return VectorTile;\n}(UrlTile));\n\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = (function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.dimensions_) {\n      res[i++] = key + '-' + this$1.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = (function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    var image = ImageTile.prototype.getImage.call(this);\n    if (this.state == TileState.LOADED) {\n      var tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  };\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = (function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = -tileCoord[2] - 1;\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileWidth = Array.isArray(tileSize) ? tileSize[0] : tileSize;\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = (function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var this$1 = this;\n\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this$1.gradient_[alpha];\n        view8[i + 1] = this$1.gradient_[alpha + 1];\n        view8[i + 2] = this$1.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport VectorLayer from './Vector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = (function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = /** @type {Object} */ (assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    VectorLayer.call(/** @type {import(\"./Vector.js\").Options} */ this, (baseOptions));\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {import(\"../source/VectorTile.js\").default} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = (function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = (function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var this$1 = this;\n\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = new formatConstructors[i]();\n      features = this$1.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  var this$1 = this;\n\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this$1.handleResult_.bind(this$1, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var deltaX = offset[0] - size[0] / 2;\n    var deltaY = size[1] / 2 - offset[1];\n    var theta = Math.atan2(deltaY, deltaX);\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    var view = map.getView();\n    if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n      var angleDelta = theta - this.lastAngle_;\n      rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n      zoomWithoutConstraints(view, resolution);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var direction = this.lastScaleDelta_ - 1;\n    rotate(view, view.getRotation());\n    zoom(view, view.getResolution(), undefined, this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = (function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = (function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = (function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var this$1 = this;\n\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this$1.freehand_ ? 1 : this$1.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this$1.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~ExtentInteraction} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = (function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires Event\n * @api\n */\nvar ExtentInteraction = (function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    var options = opt_options || {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      /** @type {VectorSource} */ (this.extentOverlay_.getSource()).addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.vertexOverlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var extent = this.getExtent();\n    var vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    var getOpposingPoint = function(point) {\n      var x_ = null;\n      var y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n      var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n      //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n    //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixel(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    var extent = this.getExtent();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = (function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = (function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this$1.SEGMENT_WRITERS_[geometries[i].getType()].call(this$1, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  Modify.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    var handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDragEvent = function handleDragEvent (evt) {\n    var this$1 = this;\n\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    var vertex = evt.coordinate;\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this$1.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var depth = segmentData.depth;\n      var geometry = segmentData.geometry;\n      var coordinates = (void 0);\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this$1.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this$1.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this$1.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this$1.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDownEvent = function handleDownEvent (evt) {\n    var this$1 = this;\n\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    var vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      var insertVertices = [];\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      var vertex = geometry.getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.feature);\n        var depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this$1.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n        } else if (coordinatesEqual(segment[0], vertex) &&\n            !componentSegments[uid][0]) {\n          this$1.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        } else if (coordinatesEqual(segment[1], vertex) &&\n            !componentSegments[uid][1]) {\n\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this$1.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n        } else if (this$1.insertVertexCondition_(evt) && getUid(segment) in this$1.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this$1.insertVertex_.apply(this$1, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var this$1 = this;\n\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this$1.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n        this$1.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this$1.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this$1.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var this$1 = this;\n\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this$1.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this$1.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this$1.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this$1.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this$1.vertexFeature_) {\n          /** @type {VectorSource} */ (this$1.overlay_.getSource()).removeFeature(this$1.vertexFeature_);\n          this$1.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    return (\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n\n}\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = (function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(SegmentData, SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleEvent = function handleEvent (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this$1.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this$1, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleUpEvent = function handleUpEvent (event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDragEvent = function handleDragEvent (event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate));\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleMoveEvent = function handleMoveEvent (event) {\n    var elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = (function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = (function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = (function (JSONFeature) {\n  function EsriJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var options = opt_options ? opt_options : {};\n    if (object['features']) {\n      var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      var features = [];\n      var esriJSONFeatures = esriJSONFeatureSet.features;\n      options.idField = object.objectIdFieldName;\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n      var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n      var crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var object = {};\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */({\n          wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n        });\n      }\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureSet} */ ({\n      'features': objects\n    });\n  };\n\n  return EsriJSON;\n}(JSONFeature));\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  var type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = GeometryType.POINT;\n  } else if (object['points']) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object['paths']) {\n    var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object['rings']) {\n    var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    var layout = getGeometryLayout(esriJSONPolygon);\n    var rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object['rings'] = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object['rings'] = rings;\n    }\n  }\n  var geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  var flatRing = [];\n  var outerRings = [];\n  var holes = [];\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    var clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    var hole = holes.shift();\n    var matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      var outerRing = outerRings[i][0];\n      var containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  var point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  var layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  var coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\n  var esriJSON;\n  var layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  var layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  var lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(lineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\n  // Esri geometries use the left-hand rule\n  var hasZM = getHasZM(polygon);\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  var multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiLineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  var multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiPoint);\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */(geometry));\n  var coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\n  var output = [];\n  for (var i = 0; i < coordinates.length; i++) {\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {import(\"../geom/Geometry.js\").default} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n\n//# sourceMappingURL=EsriJSON.js.map","/**\n * @module ol/format/XMLFeature\n */\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = (function (FeatureFormat) {\n  function XMLFeature() {\n    FeatureFormat.call(this);\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.getType = function getType () {\n    return FormatType.XML;\n  };\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\n    var this$1 = this;\n\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this$1.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  XMLFeature.prototype.readProjection = function readProjection (source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\n\n\nexport default XMLFeature;\n\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = (function (XMLFeature) {\n  function GMLBase(opt_options) {\n    XMLFeature.call(this);\n\n    var options = /** @type {Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n  }\n\n  if ( XMLFeature ) GMLBase.__proto__ = XMLFeature;\n  GMLBase.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GMLBase.prototype.constructor = GMLBase;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  GMLBase.prototype.readFeaturesInternal = function readFeaturesInternal (node, objectStack) {\n    var this$1 = this;\n\n    var localName = node.localName;\n    var features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      var context = objectStack[0];\n      var featureType = context['featureType'];\n      var featureNS = context['featureNS'];\n      var prefix = 'p';\n      var defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          var child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            var ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              var key = '';\n              var count = 0;\n              var uri = child.namespaceURI;\n              for (var candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        var ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      var parsersNS = {};\n      var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (var p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        for (var i$1 = 0, ii$1 = featureTypes.length; i$1 < ii$1; ++i$1) {\n          var featurePrefix = featureTypes[i$1].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i$1].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i$1].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this$1.readFeatureElement, this$1) :\n                  makeReplacer(this$1.readFeatureElement, this$1);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  GMLBase.prototype.readGeometryElement = function readGeometryElement (node, objectStack) {\n    var context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  GMLBase.prototype.readFeatureElementInternal = function readFeatureElementInternal (node, objectStack, asFeature) {\n    var this$1 = this;\n\n    var geometryName;\n    var values = {};\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var value = (void 0);\n      var localName = n.localName;\n      // first, check if it is simple attribute\n      if (n.childNodes.length === 0\n              || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry\n          value = this$1.readGeometryElement(n, objectStack);\n        }\n        if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n          value = this$1.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n\n      var len = n.attributes.length;\n      if (len > 0) {\n        values[localName] = {_content_: values[localName]};\n        for (var i = 0; i < len; i++) {\n          var attName = n.attributes[i].name;\n          values[localName][attName] = n.attributes[i].value;\n        }\n      }\n    }\n    if (!asFeature) {\n      return values;\n    } else {\n      var feature = new Feature(values);\n      if (geometryName) {\n        feature.setGeometryName(geometryName);\n      }\n      var fid = node.getAttribute('fid') ||\n           getAttributeNS(node, this.namespace, 'id');\n      if (fid) {\n        feature.setId(fid);\n      }\n      return feature;\n    }\n  };\n\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  GMLBase.prototype.readFeatureElement = function readFeatureElement (node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  GMLBase.prototype.readPoint = function readPoint (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  GMLBase.prototype.readMultiPoint = function readMultiPoint (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GMLBase.prototype.readMultiLineString = function readMultiLineString (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GMLBase.prototype.readMultiPolygon = function readMultiPolygon (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.pointMemberParser_ = function pointMemberParser_ (node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.lineStringMemberParser_ = function lineStringMemberParser_ (node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.polygonMemberParser_ = function polygonMemberParser_ (node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  GMLBase.prototype.readLineString = function readLineString (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  GMLBase.prototype.readFlatLinearRing_ = function readFlatLinearRing_ (node, objectStack) {\n    var ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  GMLBase.prototype.readLinearRing = function readLinearRing (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  GMLBase.prototype.readPolygon = function readPolygon (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  GMLBase.prototype.readFlatCoordinatesFromNode_ = function readFlatCoordinatesFromNode_ (node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    var features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  };\n\n  return GMLBase;\n}(XMLFeature));\n\n\nGMLBase.prototype.namespace = GMLNS;\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = (function (GMLBase) {\n  function GML3(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  if ( GMLBase ) GML3.__proto__ = GMLBase;\n  GML3.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML3.prototype.constructor = GML3;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GML3.prototype.readMultiCurve_ = function readMultiCurve_ (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      var multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GML3.prototype.readMultiSurface_ = function readMultiSurface_ (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.curveMemberParser_ = function curveMemberParser_ (node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.surfaceMemberParser_ = function surfaceMemberParser_ (node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPatch_ = function readPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readSegment_ = function readSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPolygonPatch_ = function readPolygonPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readLineStringSegment_ = function readLineStringSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.interiorParser_ = function interiorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.exteriorParser_ = function exteriorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Polygon|undefined} Polygon.\n   */\n  GML3.prototype.readSurface_ = function readSurface_ (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {LineString|undefined} LineString.\n   */\n  GML3.prototype.readCurve_ = function readCurve_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML3.prototype.readEnvelope_ = function readEnvelope_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPos_ = function readFlatPos_ (node, objectStack) {\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      var i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        var y = flatCoordinates[i];\n        var x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    var len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPosList_ = function readFlatPosList_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var contextDimension = context['srsDimension'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    var coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    var dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (/** @type {Element} */ (node.parentNode).getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    var x, y, z;\n    var flatCoordinates = [];\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePos_ = function writePos_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    var axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    var point = value.getCoordinates();\n    var coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML3.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePosList_ = function writePosList_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    var point;\n    for (var i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML3.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    var hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeFeatureMembers_ = function writeFeatureMembers_ (node, features, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    var serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var curve = context['curve'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace,\n      nodeName);\n  };\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var geom = createElementNS(this.namespace, 'geom');\n    var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  };\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Element} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    var context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  };\n\n  return GML3;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n\n//# sourceMappingURL=GML.js.map","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = (function (GMLBase) {\n  function GML2(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  if ( GMLBase ) GML2.__proto__ = GMLBase;\n  GML2.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML2.prototype.constructor = GML2;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML2.prototype.readFlatCoordinates_ = function readFlatCoordinates_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    var coordsGroups = s.trim().split(/\\s+/);\n    var flatCoordinates = [];\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n      var coords = coordsGroups[i].split(/,+/);\n      var x = parseFloat(coords[0]);\n      var y = parseFloat(coords[1]);\n      var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML2.prototype.readBox_ = function readBox_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.innerBoundaryIsParser_ = function innerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.outerBoundaryIsParser_ = function outerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Element} coordinates node.\n   * @private\n   */\n  GML2.prototype.createCoordinatesNode_ = function createCoordinatesNode_ (namespaceURI) {\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCoordinates_ = function writeCoordinates_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML2.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML2.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    var point = geometry.getCoordinates();\n    var coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  return GML2;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n\n//# sourceMappingURL=GML2.js.map","/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {makeArrayPusher, makeReplacer, makeChildAppender} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = (function (GML3) {\n  function GML32(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n\n    GML3.call(this, options);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n\n  }\n\n  if ( GML3 ) GML32.__proto__ = GML3;\n  GML32.prototype = Object.create( GML3 && GML3.prototype );\n  GML32.prototype.constructor = GML32;\n\n  return GML32;\n}(GML3));\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML32.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML32.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML32;\n\n//# sourceMappingURL=GML32.js.map","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = (function (XMLFeature) {\n  function GPX(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\n    var this$1 = this;\n\n    if (!features) {\n      features = [];\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n      if (this$1.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this$1.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  };\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\n        ends[i$1] = ends[i$1] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    var lineString = /** @type {LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    var multiLineString = /** @type {MultiLineString} */ (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    var point = /** @type {Point} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = (function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/format/TextFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = (function (FeatureFormat) {\n  function TextFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\n\n  /**\n   * @inheritDoc\n   */\n  TextFeature.prototype.getType = function getType () {\n    return FormatType.TEXT;\n  };\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  TextFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return abstract();\n  };\n\n  return TextFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = (function (XMLFeature) {\n  function KML(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  if ( XMLFeature ) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  KML.prototype.constructor = KML;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_ (node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array<Feature>} */\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  KML.prototype.readPlacemark_ = function readPlacemark_ (node, objectStack) {\n    var object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    var geometry = object['geometry'];\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n\n    return feature;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyle_ = function readSharedStyle_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      var style = readStyle(node, objectStack);\n      if (style) {\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    var styleUri;\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var this$1 = this;\n\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    var features;\n    var localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this$1.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  KML.prototype.readName = function readName (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromDocument = function readNameFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name = this$1.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromNode = function readNameFromNode (node) {\n    var this$1 = this;\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        var name = this$1.readNameFromNode(n$1);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  KML.prototype.readNetworkLinks = function readNetworkLinks (source) {\n    var networkLinks = [];\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument (doc) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode (node) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(n$1));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  KML.prototype.readRegion = function readRegion (source) {\n    var regions = [];\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument (doc) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this$1.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  KML.prototype.readRegionFromNode = function readRegionFromNode (node) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this$1.readRegionFromNode(n$1));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: kml};\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    var properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature));\n\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function(feature, resolution) {\n      var drawName = showPointNames;\n      /** @type {Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  var s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {import(\"../color.js\").Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\n        geometry = geometries[i$1];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  var textStyle = /** @type {Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  var strokeStyle = /** @type {Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var style = /** @type {Style} */\n        (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (var i = 0; i < 4; ++i) {\n    var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\n        text += ',' + coordinates[i + d$1];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  var geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, options));\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = (function (TextFeature) {\n  function IGC(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  if ( TextFeature ) IGC.__proto__ = TextFeature;\n  IGC.prototype = Object.create( TextFeature && TextFeature.prototype );\n  IGC.prototype.constructor = IGC;\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var altitudeMode = this.altitudeMode_;\n    var lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    var properties = {};\n    var flatCoordinates = [];\n    var year = 2000;\n    var month = 0;\n    var day = 1;\n    var lastDateTime = -1;\n    var i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      var line = lines[i];\n      var m = (void 0);\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          var hour = parseInt(m[1], 10);\n          var minute = parseInt(m[2], 10);\n          var second = parseInt(m[3], 10);\n          var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            var z = (void 0);\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          var dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    var lineString = new LineString(flatCoordinates, layout);\n    var feature = new Feature(transformWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  };\n\n  return IGC;\n}(TextFeature));\n\nexport default IGC;\n\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {GeometryType} type Geometry type.\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n * @param {Object<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nvar RenderFeature = function RenderFeature(type, flatCoordinates, ends, properties, id) {\n  /**\n  * @private\n  * @type {import(\"../extent.js\").Extent|undefined}\n  */\n  this.extent_;\n\n  /**\n  * @private\n  * @type {number|string|undefined}\n  */\n  this.id_ = id;\n\n  /**\n  * @private\n  * @type {GeometryType}\n  */\n  this.type_ = type;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatInteriorPoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatMidpoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>|Array<Array<number>>}\n  */\n  this.ends_ = ends;\n\n  /**\n  * @private\n  * @type {Object<string, *>}\n  */\n  this.properties_ = properties;\n\n};\n\n/**\n* Get a feature property by its key.\n* @param {string} key Key\n* @return {*} Value for the requested key.\n* @api\n*/\nRenderFeature.prototype.get = function get (key) {\n  return this.properties_[key];\n};\n\n/**\n* Get the extent of this feature's geometry.\n* @return {import(\"../extent.js\").Extent} Extent.\n* @api\n*/\nRenderFeature.prototype.getExtent = function getExtent () {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoint.\n*/\nRenderFeature.prototype.getFlatMidpoint = function getFlatMidpoint () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoints.\n*/\nRenderFeature.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var this$1 = this;\n\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    var flatCoordinates = this.flatCoordinates_;\n    var offset = 0;\n    var ends = /** @type {Array<number>} */ (this.ends_);\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this$1.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* Get the feature identifier.This is a stable identifier for the feature and\n* is set when reading data from a remote source.\n* @return {number|string|undefined} Id.\n* @api\n*/\nRenderFeature.prototype.getId = function getId () {\n  return this.id_;\n};\n\n/**\n* @return {Array<number>} Flat coordinates.\n*/\nRenderFeature.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n  return this.flatCoordinates_;\n};\n\n/**\n* For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n* determining the geometry type in style function (see {@link #getType}).\n* @return {RenderFeature} Feature.\n* @api\n*/\nRenderFeature.prototype.getGeometry = function getGeometry () {\n  return this;\n};\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {RenderFeature} Simplified geometry.\n */\nRenderFeature.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n  return this;\n};\n\n/**\n* Get the feature properties.\n* @return {Object<string, *>} Feature properties.\n* @api\n*/\nRenderFeature.prototype.getProperties = function getProperties () {\n  return this.properties_;\n};\n\n/**\n* @return {number} Stride.\n*/\nRenderFeature.prototype.getStride = function getStride () {\n  return 2;\n};\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = function getStyleFunction () {\n  return undefined;\n};\n\n/**\n* Get the type of this feature's geometry.\n* @return {GeometryType} Geometry type.\n* @api\n*/\nRenderFeature.prototype.getType = function getType () {\n  return this.type_;\n};\n\n/**\n* Transform geometry coordinates from tile pixel space to projected.\n* The SRS of the source and destination are expected to be the same.\n*\n* @param {import(\"../proj.js\").ProjectionLike} source The current projection\n* @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n*/\nRenderFeature.prototype.transform = function transform (source, destination) {\n  source = getProjection(source);\n  var pixelExtent = source.getExtent();\n  var projectedExtent = source.getWorldExtent();\n  var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\n\n\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\nexport default RenderFeature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = (function (FeatureFormat) {\n  function MVT(opt_options) {\n    FeatureFormat.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  if ( FeatureFormat ) MVT.__proto__ = FeatureFormat;\n  MVT.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  MVT.prototype.constructor = MVT;\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  MVT.prototype.readRawGeometry_ = function readRawGeometry_ (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  };\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  MVT.prototype.createFeature_ = function createFeature_ (pbf, rawFeature, opt_options) {\n    var type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    var feature;\n    var id = rawFeature.id;\n    var values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    var flatCoordinates = [];\n    var ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    var geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      var geom;\n      if (geometryType == GeometryType.POLYGON) {\n        var endss = [];\n        var offset = 0;\n        var prevEndIndex = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n          var end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      var geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geom, false,\n        this.adaptOptions(opt_options)));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.getLastExtent = function getLastExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MVT.prototype.getType = function getType () {\n    return FormatType.ARRAY_BUFFER;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readFeatures = function readFeatures (source, opt_options) {\n    var this$1 = this;\n\n    var layers = this.layers_;\n\n    var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<import(\"../Feature.js\").FeatureLike>} */\n    var features = [];\n    for (var name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      var pbfLayer = pbfLayers[name];\n\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this$1.createFeature_(pbf, rawFeature));\n      }\n      this$1.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readProjection = function readProjection (source) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  MVT.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  return MVT;\n}(FeatureFormat));\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {GeometryType} */\n  var geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n\n//# sourceMappingURL=MVT.js.map","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {pushParseAndPop, makeStructureNS} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n  });\n\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = (function (XMLFeature) {\n  function OSMXML() {\n    XMLFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  if ( XMLFeature ) OSMXML.__proto__ = XMLFeature;\n  OSMXML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  OSMXML.prototype.constructor = OSMXML;\n\n  /**\n   * @inheritDoc\n   */\n  OSMXML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = this.getReadOptions(node, opt_options);\n    if (node.localName == 'osm') {\n      var state = pushParseAndPop({\n        nodes: {},\n        ways: [],\n        features: []\n      }, PARSERS, node, [options]);\n      // parse nodes in ways\n      for (var j = 0; j < state.ways.length; j++) {\n        var values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          var point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        var geometry = (void 0);\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n        } else {\n          geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        transformWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(values.id);\n        feature.setProperties(values.tags);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  };\n\n  return OSMXML;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'tag': readTag\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  var coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  ];\n  state.nodes[id] = coordinates;\n\n  var values = pushParseAndPop({\n    tags: {}\n  }, NODE_PARSERS, node, objectStack);\n  if (!isEmpty(values.tags)) {\n    var geometry = new Point(coordinates);\n    transformWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setId(id);\n    feature.setProperties(values.tags);\n    state.features.push(feature);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  var id = node.getAttribute('id');\n  var values = pushParseAndPop({\n    id: id,\n    ndrefs: [],\n    tags: {}\n  }, WAY_PARSERS, node, objectStack);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\n\nexport default OSMXML;\n\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  var dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  var j = offset;\n  while (j < end) {\n    var x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (var k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n\n//# sourceMappingURL=flip.js.map","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = (function (TextFeature) {\n  function Polyline(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  if ( TextFeature ) Polyline.__proto__ = TextFeature;\n  Polyline.prototype = Object.create( TextFeature && TextFeature.prototype );\n  Polyline.prototype.constructor = Polyline;\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var stride = getStrideForLayout(this.geometryLayout_);\n    var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n    return (\n      /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(\n        new LineString(coordinates, this.geometryLayout_),\n        false,\n        this.adaptOptions(opt_options)\n      ))\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    geometry = /** @type {LineString} */\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  };\n\n  return Polyline;\n}(TextFeature));\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      var num = numbers[i];\n      var delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  /** @type {Array<number>} */\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  var numbers = decodeFloats(encoded, factor);\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var numbers = decodeSignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  var numbers = decodeUnsignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  var encoded = '';\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  var numbers = [];\n  var current = 0;\n  var shift = 0;\n  for (var i = 0, ii = encoded.length; i < ii; ++i) {\n    var b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  var value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n\n//# sourceMappingURL=Polyline.js.map","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = (function (JSONFeature) {\n  function TopoJSON(opt_options) {\n    JSONFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  if ( JSONFeature ) TopoJSON.__proto__ = JSONFeature;\n  TopoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  TopoJSON.prototype.constructor = TopoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    if (object.type == 'Topology') {\n      var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      var transform, scale = null, translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      var arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      var features = [];\n      var topoJSONFeatures = topoJSONTopology['objects'];\n      var property = this.layerName_;\n      var feature;\n      for (var objectName in topoJSONFeatures) {\n        if (this$1.layers_ && this$1.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return this.dataProjection;\n  };\n\n  return TopoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  var coordinates = [];\n  var index, arc;\n  for (var i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  var coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    var polyArray = object['arcs'][i];\n    var ringCoords = [];\n    for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  var geometries = collection['geometries'];\n  var features = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  var geometry;\n  var type = object.type;\n  var geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  var feature = new Feature();\n  feature.setGeometry(/** @type {import(\"../geom/Geometry.js\").default} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  var properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (var i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  var x = 0;\n  var y = 0;\n  for (var i = 0, ii = arc.length; i < ii; ++i) {\n    var vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = function Filter(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function getTagName () {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n//# sourceMappingURL=Filter.js.map","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = (function (Filter) {\n  function LogicalNary(tagName, conditions) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n  if ( Filter ) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create( Filter && Filter.prototype );\n  LogicalNary.prototype.constructor = LogicalNary;\n\n  return LogicalNary;\n}(Filter));\n\nexport default LogicalNary;\n\n//# sourceMappingURL=LogicalNary.js.map","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = (function (LogicalNary) {\n  function And(conditions) {\n    LogicalNary.call(this, 'And', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) And.__proto__ = LogicalNary;\n  And.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  And.prototype.constructor = And;\n\n  return And;\n}(LogicalNary));\n\nexport default And;\n\n//# sourceMappingURL=And.js.map","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = (function (Filter) {\n  function Bbox(geometryName, extent, opt_srsName) {\n\n    Filter.call(this, 'BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Bbox.__proto__ = Filter;\n  Bbox.prototype = Object.create( Filter && Filter.prototype );\n  Bbox.prototype.constructor = Bbox;\n\n  return Bbox;\n}(Filter));\n\nexport default Bbox;\n\n//# sourceMappingURL=Bbox.js.map","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = (function (Filter) {\n  function Spatial(tagName, geometryName, geometry, opt_srsName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {import(\"../../geom/Geometry.js\").default}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Spatial.__proto__ = Filter;\n  Spatial.prototype = Object.create( Filter && Filter.prototype );\n  Spatial.prototype.constructor = Spatial;\n\n  return Spatial;\n}(Filter));\n\nexport default Spatial;\n\n//# sourceMappingURL=Spatial.js.map","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = (function (Spatial) {\n  function Contains(geometryName, geometry, opt_srsName) {\n\n    Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n  if ( Spatial ) Contains.__proto__ = Spatial;\n  Contains.prototype = Object.create( Spatial && Spatial.prototype );\n  Contains.prototype.constructor = Contains;\n\n  return Contains;\n}(Spatial));\n\nexport default Contains;\n\n//# sourceMappingURL=Contains.js.map","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = (function (Filter) {\n  function Comparison(tagName, propertyName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n  if ( Filter ) Comparison.__proto__ = Filter;\n  Comparison.prototype = Object.create( Filter && Filter.prototype );\n  Comparison.prototype.constructor = Comparison;\n\n  return Comparison;\n}(Filter));\n\nexport default Comparison;\n\n//# sourceMappingURL=Comparison.js.map","/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = (function (Comparison) {\n  function During(propertyName, begin, end) {\n    Comparison.call(this, 'During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n  if ( Comparison ) During.__proto__ = Comparison;\n  During.prototype = Object.create( Comparison && Comparison.prototype );\n  During.prototype.constructor = During;\n\n  return During;\n}(Comparison));\n\nexport default During;\n\n//# sourceMappingURL=During.js.map","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = (function (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n\n    Comparison.call(this, tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n  if ( Comparison ) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create( Comparison && Comparison.prototype );\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n\n  return ComparisonBinary;\n}(Comparison));\n\nexport default ComparisonBinary;\n\n//# sourceMappingURL=ComparisonBinary.js.map","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = (function (ComparisonBinary) {\n  function EqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) EqualTo.__proto__ = ComparisonBinary;\n  EqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  EqualTo.prototype.constructor = EqualTo;\n\n  return EqualTo;\n}(ComparisonBinary));\n\nexport default EqualTo;\n\n//# sourceMappingURL=EqualTo.js.map","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = (function (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThan.prototype.constructor = GreaterThan;\n\n  return GreaterThan;\n}(ComparisonBinary));\n\nexport default GreaterThan;\n\n//# sourceMappingURL=GreaterThan.js.map","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = (function (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default GreaterThanOrEqualTo;\n\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = (function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create( Spatial && Spatial.prototype );\n  Intersects.prototype.constructor = Intersects;\n\n  return Intersects;\n}(Spatial));\n\nexport default Intersects;\n\n//# sourceMappingURL=Intersects.js.map","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = (function (Comparison) {\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n\n  if ( Comparison ) IsBetween.__proto__ = Comparison;\n  IsBetween.prototype = Object.create( Comparison && Comparison.prototype );\n  IsBetween.prototype.constructor = IsBetween;\n\n  return IsBetween;\n}(Comparison));\n\nexport default IsBetween;\n\n//# sourceMappingURL=IsBetween.js.map","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = (function (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    Comparison.call(this, 'PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n\n  if ( Comparison ) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create( Comparison && Comparison.prototype );\n  IsLike.prototype.constructor = IsLike;\n\n  return IsLike;\n}(Comparison));\n\nexport default IsLike;\n\n//# sourceMappingURL=IsLike.js.map","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = (function (Comparison) {\n  function IsNull(propertyName) {\n    Comparison.call(this, 'PropertyIsNull', propertyName);\n  }\n\n  if ( Comparison ) IsNull.__proto__ = Comparison;\n  IsNull.prototype = Object.create( Comparison && Comparison.prototype );\n  IsNull.prototype.constructor = IsNull;\n\n  return IsNull;\n}(Comparison));\n\nexport default IsNull;\n\n//# sourceMappingURL=IsNull.js.map","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = (function (ComparisonBinary) {\n  function LessThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThan.__proto__ = ComparisonBinary;\n  LessThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThan.prototype.constructor = LessThan;\n\n  return LessThan;\n}(ComparisonBinary));\n\nexport default LessThan;\n\n//# sourceMappingURL=LessThan.js.map","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = (function (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n\n  return LessThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default LessThanOrEqualTo;\n\n//# sourceMappingURL=LessThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = (function (Filter) {\n  function Not(condition) {\n\n    Filter.call(this, 'Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n\n  }\n\n  if ( Filter ) Not.__proto__ = Filter;\n  Not.prototype = Object.create( Filter && Filter.prototype );\n  Not.prototype.constructor = Not;\n\n  return Not;\n}(Filter));\n\nexport default Not;\n\n//# sourceMappingURL=Not.js.map","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = (function (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  NotEqualTo.prototype.constructor = NotEqualTo;\n\n  return NotEqualTo;\n}(ComparisonBinary));\n\nexport default NotEqualTo;\n\n//# sourceMappingURL=NotEqualTo.js.map","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = (function (LogicalNary) {\n  function Or(conditions) {\n    LogicalNary.call(this, 'Or', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  Or.prototype.constructor = Or;\n\n  return Or;\n}(LogicalNary));\n\nexport default Or;\n\n//# sourceMappingURL=Or.js.map","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = (function (Spatial) {\n  function Within(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Within.__proto__ = Spatial;\n  Within.prototype = Object.create( Spatial && Spatial.prototype );\n  Within.prototype.constructor = Within;\n\n  return Within;\n}(Spatial));\n\nexport default Within;\n\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\n//# sourceMappingURL=filter.js.map","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = (function (XMLFeature) {\n  function WFS(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  if ( XMLFeature ) WFS.__proto__ = XMLFeature;\n  WFS.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WFS.prototype.constructor = WFS;\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  WFS.prototype.getFeatureType = function getFeatureType () {\n    return this.featureType_;\n  };\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  WFS.prototype.setFeatureType = function setFeatureType (featureType) {\n    this.featureType_ = featureType;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    var features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  WFS.prototype.readTransactionResponse = function readTransactionResponse (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  WFS.prototype.readFeatureCollectionMetadata = function readFeatureCollectionMetadata (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function readFeatureCollectionMetadataFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function readFeatureCollectionMetadataFromNode (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromDocument = function readTransactionResponseFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromNode = function readTransactionResponseFromNode (node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeGetFeature = function writeGetFeature$1 (options) {\n    var node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    var filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', String(options.maxFeatures));\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', String(options.startIndex));\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', String(options.count));\n      }\n      if (options.viewParams !== undefined) {\n        node.setAttribute('viewParams ', options.viewParams);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        var bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    });\n\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n    return node;\n  };\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeTransaction = function writeTransaction (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var node = createElementNS(WFSNS, 'Transaction');\n    var version = options.version ? options.version : DEFAULT_VERSION;\n    var gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    var schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    var this$1 = this;\n\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          var objectStack = [{}];\n          this$1.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var filter = createElementNS(OGCNS, 'Filter');\n  var child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  var name = createElementNS(WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  var valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  var property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  var child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n\n//# sourceMappingURL=WFS.js.map","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = function Lexer(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *   contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function nextChar_ () {\n  return this.wkt.charAt(++this.index_);\n};\n\n/**\n * Fetch and return the next token.\n * @return {!Token} Next string token.\n */\nLexer.prototype.nextToken = function nextToken () {\n  var c = this.nextChar_();\n  var position = this.index_;\n  /** @type {number|string} */\n  var value = c;\n  var type;\n\n  if (c == '(') {\n    type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    type = TokenType.COMMA;\n  } else if (c == ')') {\n    type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    type = TokenType.NUMBER;\n    value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    type = TokenType.TEXT;\n    value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return {position: position, value: value, type: type};\n};\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function readNumber_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this$1.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function readText_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  do {\n    c = this$1.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = function Parser(lexer) {\n\n  /**\n   * @type {Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function consume_ () {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function isTokenType (type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n/**\n * If the given type matches the current token, consume it.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function match (type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {import(\"../geom/Geometry.js\").default} The geometry.\n */\nParser.prototype.parse = function parse () {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n/**\n * Try to parse the dimensional info.\n * @return {GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\n  var layout = GeometryLayout.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n/**\n * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\n    var this$1 = this;\n\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this$1.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {Array<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function parsePointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function parsePoint_ () {\n    var this$1 = this;\n\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this$1.token_;\n    if (this$1.match(TokenType.NUMBER)) {\n      coordinates.push(/** @type {number} */ (token.value));\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function parsePointList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePoint_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePointText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n/**\n * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\n  var token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == 'GEOMETRYCOLLECTION') {\n      var geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      var ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      var coordinates;\n      switch (geomType) {\n        case 'POINT': {\n          coordinates = this.parsePointText_();\n          break;\n        }\n        case 'LINESTRING': {\n          coordinates = this.parseLineStringText_();\n          break;\n        }\n        case 'POLYGON': {\n          coordinates = this.parsePolygonText_();\n          break;\n        }\n        case 'MULTIPOINT': {\n          coordinates = this.parseMultiPointText_();\n          break;\n        }\n        case 'MULTILINESTRING': {\n          coordinates = this.parseMultiLineStringText_();\n          break;\n        }\n        case 'MULTIPOLYGON': {\n          coordinates = this.parseMultiPolygonText_();\n          break;\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n      }\n\n      if (!coordinates) {\n        if (ctor === GeometryConstructor['POINT']) {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      }\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = (function (TextFeature) {\n  function WKT(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  WKT.prototype.parse_ = function parse_ (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      var feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    var geometries = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return encode(/** @type {import(\"../geom/Geometry.js\").default} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  };\n\n  return WKT;\n}(TextFeature));\n\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n    var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (!source) {\n    return null;\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else {\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Element} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = (function (XML) {\n  function WMSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    this.version = node.getAttribute('version').trim();\n    var wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  };\n\n  return WMSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  var extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  var geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  var authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  var metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n\n//# sourceMappingURL=WMSCapabilities.js.map","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = (function (XMLFeature) {\n  function WMSGetFeatureInfo(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  if ( XMLFeature ) WMSGetFeatureInfo.__proto__ = XMLFeature;\n  WMSGetFeatureInfo.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WMSGetFeatureInfo.prototype.constructor = WMSGetFeatureInfo;\n\n  /**\n   * @return {Array<string>} layers\n   */\n  WMSGetFeatureInfo.prototype.getLayers = function getLayers () {\n    return this.layers_;\n  };\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  WMSGetFeatureInfo.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  WMSGetFeatureInfo.prototype.readFeatures_ = function readFeatures_ (node, objectStack) {\n    var this$1 = this;\n\n    node.setAttribute('namespaceURI', this.featureNS_);\n    var localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n        var layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        var layerElement = /** @type {Element} */ (layer);\n        var context = objectStack[0];\n\n        var toRemove = layerIdentifier;\n        var layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this$1.layers_ && !includes(this$1.layers_, layerName)) {\n          continue;\n        }\n\n        var featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this$1.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this$1.gmlFormat_.readFeatureElement, this$1.gmlFormat_);\n        var parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layerElement.setAttribute('namespaceURI', this$1.featureNS_);\n        var layerFeatures = pushParseAndPop(\n          [], parsersNS, layerElement, objectStack, this$1.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      var gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature));\n\n\nexport default WMSGetFeatureInfo;\n\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","/**\n * @module ol/format/OWS\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString} from './xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nvar OWS = (function (XML) {\n  function OWS() {\n    XML.call(this);\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromNode = function readFromNode (node) {\n    var owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  };\n\n  return OWS;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  var href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from './OWS.js';\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from './xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = (function (XML) {\n  function WMTSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    var version = node.getAttribute('version').trim();\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = (function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = (function (Control) {\n  function MousePosition(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    Control.call(this, {\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\n\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    this.transform_ = null;\n  };\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  };\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\n    var map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MousePosition.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function setProjection (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n\n  return MousePosition;\n}(Control));\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = (function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = (function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var this$1 = this;\n\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this$1.element.style.display = 'none';\n        this$1.renderedVisible_ = false;\n        return;\n      } else if (width >= this$1.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = (function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, EventType.MOUSEMOVE, drag, this),\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, EventType.MOUSEUP, end, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = (function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Graticule from './ol/Graticule';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport $ol$WebGLMap from './ol/WebGLMap';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {inherits as _ol$inherits} from './ol';\nimport {getUid as _ol$getUid} from './ol';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$AtlasManager from './ol/style/AtlasManager';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$webgl$ImageLayer from './ol/renderer/webgl/ImageLayer';\nimport $ol$renderer$webgl$Map from './ol/renderer/webgl/Map';\nimport $ol$renderer$webgl$TileLayer from './ol/renderer/webgl/TileLayer';\nimport $ol$renderer$webgl$VectorLayer from './ol/renderer/webgl/VectorLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$Map from './ol/renderer/canvas/Map';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {defaults as _ol_control$defaults} from './ol/control';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Graticule = $ol$Graticule;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.WebGLMap = $ol$WebGLMap;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.inherits = _ol$inherits;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.toContext = _ol_render$toContext;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Map = $ol$renderer$canvas$Map;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.ImageLayer = $ol$renderer$webgl$ImageLayer;\nol.renderer.webgl.Map = $ol$renderer$webgl$Map;\nol.renderer.webgl.TileLayer = $ol$renderer$webgl$TileLayer;\nol.renderer.webgl.VectorLayer = $ol$renderer$webgl$VectorLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.AtlasManager = $ol$style$AtlasManager;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n//# sourceMappingURL=proj4.js.map","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  var canvas = context.canvas;\n  var options = opt_options ? opt_options : {};\n  var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  var size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  var extent = [0, 0, canvas.width, canvas.height];\n  var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n//# sourceMappingURL=render.js.map"],"sourceRoot":""}