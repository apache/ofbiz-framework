<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns="http://ofbiz.apache.org/Simple-Method" xsi:schemaLocation="http://ofbiz.apache.org/Simple-Method http://ofbiz.apache.org/dtds/simple-methods.xsd">
    <simple-method method-name="testCreateWorkEffortAndPartyAssign" short-description="Test the service createWorkEffortAndPartyAssign" login-required="false">
        <set field="serviceCtx.partyId" value="TestParty-1"/>
        <set field="serviceCtx.roleTypeId" value="CAL_OWNER"/>
        <set field="serviceCtx.statusId" value="PRTYASGN_ASSIGNED"/>
        <set field="serviceCtx.workEffortId" value="TestWorkEffort-1"/>
        <set field="serviceCtx.partyTypeId" value="PARTY_GROUP"/>
        <set field="serviceCtx.workEffortName" value="Test WorkEffort Event"/>
        <set field="serviceCtx.workEffortTypeId" value="TASK"/>
        <set field="serviceCtx.currentStatusId" value="CAL_ACCEPTED"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createWorkEffortAndPartyAssign" in-map-name="serviceCtx">
            <result-to-field result-name="workEffortId"/>
        </call-service>
        <entity-one entity-name="WorkEffort" value-field="workEffort"/>
        <set field="lookupKeyValue.workEffortId" from-field="workEffortId"/>
        <set field="lookupKeyValue.partyId"  value="TestParty-1"/>
        <set field="lookupKeyValue.roleTypeId"  value="CAL_OWNER"/>
        <find-by-and entity-name="WorkEffortPartyAssignment" map="lookupKeyValue" list="workEffortPartyAssignmentList"/>
        <first-from-list entry="workEffortPartyAssignment" list="workEffortPartyAssignmentList"/>
        <assert>
            <not><if-empty field="workEffort"/></not>
            <not><if-empty field="workEffortPartyAssignment"/></not>
            <if-compare field="workEffort.workEffortTypeId" operator="equals" value="TASK"/>
            <if-compare field="workEffort.currentStatusId" operator="equals" value="CAL_ACCEPTED"/>
            <if-compare field="workEffortPartyAssignment.statusId" operator="equals" value="PRTYASGN_ASSIGNED"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testDeleteWorkEffort" short-description="Test the service deleteWorkEffort" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkEffort-1"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="deleteWorkEffort" in-map-name="serviceCtx"/>
        <entity-one entity-name="WorkEffort" value-field="workEffort">
            <field-map field-name="workEffortId" value="TestWorkEffort-1"/>
        </entity-one>
        <assert>
            <if-empty field="workEffort"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCopyWorkEffort" short-description="Test the service copyWorkEffort" login-required="false">
        <set field="serviceCtx.sourceWorkEffortId" value="TestWorkeffort-3"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="copyWorkEffort" in-map-name="serviceCtx">
            <result-to-field result-name="workEffortId"/>
        </call-service>
        <entity-one entity-name="WorkEffort" value-field="workEffort"/>
        <assert>
            <not><if-empty field="workEffort"/></not>
            <if-compare operator="equals" field="workEffort.workEffortName" value="New Test Workeffort"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testDuplicateWorkEffort" short-description="Test the service duplicateWorkEffort" login-required="false">
        <set field="serviceCtx.oldWorkEffortId" value="TestWorkeffort-3"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="duplicateWorkEffort" in-map-name="serviceCtx">
            <result-to-field result-name="workEffortId"/>
        </call-service>
        <entity-one entity-name="WorkEffort" value-field="workEffort"/>
        <assert>
            <not><if-empty field="workEffort"/></not>
            <if-compare operator="equals" field="workEffort.workEffortName" value="New Test Workeffort"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testMakeCommunicationEventWorkEffort" short-description="Test the service makeCommunicationEventWorkEffort" login-required="false">
        <set field="serviceCtx.communicationEventId" value="TestEvent-1"/>
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="makeCommunicationEventWorkEffort" in-map-name="serviceCtx">
            <result-to-field result-name="workEffortId"/>
            <result-to-field result-name="communicationEventId"/>
        </call-service>
        <entity-one entity-name="CommunicationEventWorkEff" value-field="communicationEventWorkEff"/>
        <assert>
            <not><if-empty field="communicationEventWorkEff"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testAssignPartyToWorkEffort" short-description="Test the service assignPartyToWorkEffort" login-required="false">
        <set field="serviceCtx.partyId" value="TestParty"/>
        <set field="serviceCtx.roleTypeId" value="CONTENT_AUTHOR"/>
        <set field="serviceCtx.statusId" value="PRTYASGN_ASSIGNED"/>
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <set field="serviceCtx.fromDate" value="2009-09-09 01:01:01" type="Timestamp"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="assignPartyToWorkEffort" in-map-name="serviceCtx">
            <result-to-field result-name="fromDate"/>
        </call-service>
        <entity-one entity-name="WorkEffortPartyAssignment" value-field="workEffortPartyAssignment">
            <field-map field-name="partyId" value="TestParty"/>
            <field-map field-name="roleTypeId" value="CONTENT_AUTHOR"/>
            <field-map field-name="workEffortId" value="TestWorkeffort-3"/>
        </entity-one>
        <assert>
            <not><if-empty field="workEffortPartyAssignment"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testUpdatePartyToWorkEffortAssignment" short-description="Test the service updatePartyToWorkEffortAssignment" login-required="false">
        <set field="serviceCtx.partyId" value="TestParty"/>
        <set field="serviceCtx.roleTypeId" value="CUSTOMER"/>
        <set field="serviceCtx.statusId" value="PRTYASGN_ASSIGNED"/>
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <set field="serviceCtx.fromDate" value="2009-09-09 02:02:02" type="Timestamp"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="updatePartyToWorkEffortAssignment" in-map-name="serviceCtx"/>
        <entity-one entity-name="WorkEffortPartyAssignment" value-field="workEffortPartyAssignment">
            <field-map field-name="partyId" value="TestParty"/>
            <field-map field-name="roleTypeId" value="CUSTOMER"/>
            <field-map field-name="workEffortId" value="TestWorkeffort-3"/>
            <field-map field-name="fromDate" value="2009-09-09 02:02:02"/>
        </entity-one>
        <assert>
            <not><if-empty field="workEffortPartyAssignment"/></not>
            <if-compare operator="equals" field="workEffortPartyAssignment.statusId" value="PRTYASGN_ASSIGNED"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testDeletePartyToWorkEffortAssignment" short-description="Test the service deletePartyToWorkEffortAssignment" login-required="false">
        <set field="serviceCtx.partyId" value="TestParty"/>
        <set field="serviceCtx.roleTypeId" value="ACCOUNTANT"/>
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <set field="serviceCtx.fromDate" value="2009-09-09 02:02:02" type="Timestamp"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="deletePartyToWorkEffortAssignment" in-map-name="serviceCtx"/>
        <entity-one entity-name="WorkEffortPartyAssignment" value-field="workEffortPartyAssignment">
            <field-map field-name="partyId" value="TestParty"/>
            <field-map field-name="roleTypeId" value="ACCOUNTANT"/>
            <field-map field-name="workEffortId" value="TestWorkeffort-3"/>
            <field-map field-name="fromDate" value="2009-09-09 02:02:02"/>
        </entity-one>
        <assert>
            <not><if-empty field="workEffortPartyAssignment"/></not>
            <not><if-empty field="workEffortPartyAssignment.thruDate"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testQuickAssignPartyToWorkEffort" short-description="Test the service quickAssignPartyToWorkEffort" login-required="false">
        <set field="serviceCtx.quickAssignPartyId" value="TestCompany"/>
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="quickAssignPartyToWorkEffort" in-map-name="serviceCtx"/>
        <set field="lookupKeyValue.workEffortId" value="TestWorkeffort-3"/>
        <set field="lookupKeyValue.partyId"  value="TestCompany"/>
        <find-by-and entity-name="WorkEffortPartyAssignment" map="lookupKeyValue" list="workEffortPartyAssignmentList"/>
        <first-from-list entry="workEffortPartyAssignment" list="workEffortPartyAssignmentList"/>
        <assert>
            <not><if-empty field="workEffortPartyAssignment"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testQuickAssignPartyToWorkEffortWithRole" short-description="Test the service quickAssignPartyToWorkEffortWithRole" login-required="false">
        <set field="serviceCtx.quickAssignPartyId" value="TestParty-1"/>
        <set field="serviceCtx.roleTypeId" value="BILL_FROM_VENDOR"/>
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="quickAssignPartyToWorkEffortWithRole" in-map-name="serviceCtx"/>
        <set field="lookupKeyValue.workEffortId" value="TestWorkeffort-3"/>
        <set field="lookupKeyValue.partyId" value="TestParty-1"/>
        <set field="lookupKeyValue.roleTypeId" value="BILL_FROM_VENDOR"/>
        <find-by-and entity-name="WorkEffortPartyAssignment" map="lookupKeyValue" list="workEffortPartyAssignmentList"/>
        <first-from-list entry="workEffortPartyAssignment" list="workEffortPartyAssignmentList"/>
        <assert>
            <not><if-empty field="workEffortPartyAssignment"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCreateWorkEffortNote" short-description="Test the service createWorkEffortNote" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <set field="serviceCtx.noteInfo" value="This is test note."/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createWorkEffortNote" in-map-name="serviceCtx">
            <result-to-field result-name="noteId"/>
        </call-service>
        <entity-one entity-name="WorkEffortNote" value-field="workEffortNote">
            <field-map field-name="workEffortId" value="TestWorkeffort-3"/>
        </entity-one>
        <entity-one entity-name="NoteData" value-field="noteData"/>
        <assert>
            <not><if-empty field="workEffortNote"/></not>
            <not><if-empty field="noteData"/></not>
            <if-compare operator="equals" field="noteData.noteInfo" value="This is test note."/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testUpdateWorkEffortNote" short-description="Test the service updateWorkEffortNote" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <set field="serviceCtx.noteId" value="TestNote-1"/>
        <set field="serviceCtx.internalNote" value="Y"/>
        <set field="serviceCtx.noteInfo" value="This is updated test note."/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="updateWorkEffortNote" in-map-name="serviceCtx"/>
        <entity-one entity-name="WorkEffortNote" value-field="workEffortNote">
            <field-map field-name="workEffortId" value="TestWorkeffort-3"/>
            <field-map field-name="noteId" value="TestNote-1"/>
        </entity-one>
        <entity-one entity-name="NoteData" value-field="noteData">
            <field-map field-name="noteId" value="TestNote-1"/>
        </entity-one>
        <assert>
            <not><if-empty field="workEffortNote"/></not>
            <not><if-empty field="noteData"/></not>
            <if-compare operator="equals" field="noteData.noteInfo" value="This is updated test note."/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testGetWorkEffort" short-description="Test the service getWorkEffort" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="getWorkEffort" in-map-name="serviceCtx">
            <result-to-field result-name="workEffort"/>
        </call-service>
        <assert>
            <not><if-empty field="workEffort"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCreateWorkEffortAssoc" short-description="Test the service createWorkEffortAssoc" login-required="false">
        <set field="serviceCtx.workEffortIdFrom" value="TestWorkeffort-2"/>
        <set field="serviceCtx.workEffortIdTo" value="TestWorkeffort-3"/>
        <set field="serviceCtx.workEffortAssocTypeId" value="ROUTING_COMPONENT"/>
        <set field="serviceCtx.fromDate" value="2009-09-09 02:02:02" type="Timestamp"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createWorkEffortAssoc" in-map-name="serviceCtx"/>
        <entity-one entity-name="WorkEffortAssoc" value-field="workEffortAssoc">
            <field-map field-name="workEffortIdFrom" value="TestWorkeffort-2"/>
            <field-map field-name="workEffortIdTo" value="TestWorkeffort-3"/>
            <field-map field-name="workEffortAssocTypeId" value="ROUTING_COMPONENT"/>
            <field-map field-name="fromDate" value="2009-09-09 02:02:02"/>
        </entity-one>
        <assert>
            <not><if-empty field="workEffortAssoc"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCopyWorkEffortAssocs" short-description="Test the service copyWorkEffortAssocs" login-required="false">
        <set field="serviceCtx.sourceWorkEffortId" value="TestWorkeffort-2"/>
        <set field="serviceCtx.targetWorkEffortId" value="TestWorkeffort-4"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="copyWorkEffortAssocs" in-map-name="serviceCtx"/>
        <set field="lookupKeyValue.workEffortIdFrom" value="TestWorkeffort-4"/>
        <find-by-and entity-name="WorkEffortAssoc" map="lookupKeyValue" list="workEffortAssocList"/>
        <assert>
            <not><if-empty field="workEffortAssocList"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCreateWorkEffortKeyword" short-description="Test the service createWorkEffortKeyword" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-2"/>
        <set field="serviceCtx.keyword" value="test keyword for workeffort"/>
        <set field="serviceCtx.relevancyWeight" value="1" type="Long"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createWorkEffortKeyword" in-map-name="serviceCtx"/>
        <entity-one entity-name="WorkEffortKeyword" value-field="workEffortKeyword">
            <field-map field-name="workEffortId" value="TestWorkeffort-2"/>
            <field-map field-name="keyword" value="test keyword for workeffort"/>
        </entity-one>
        <assert>
            <not><if-empty field="workEffortKeyword"/></not>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testDeleteWorkEffortKeyword" short-description="Test the service deleteWorkEffortKeyword" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-3"/>
        <set field="serviceCtx.keyword" value="test keyword"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="deleteWorkEffortKeyword" in-map-name="serviceCtx"/>
        <entity-one entity-name="WorkEffortKeyword" value-field="workEffortKeyword">
            <field-map field-name="workEffortId" value="TestWorkeffort-3"/>
            <field-map field-name="keyword" value="test keyword"/>
        </entity-one>
        <assert>
            <if-empty field="workEffortKeyword"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testDeleteWorkEffortKeywords" short-description="Test the service deleteWorkEffortKeywords" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-2"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="deleteWorkEffortKeywords" in-map-name="serviceCtx"/>
        <set field="lookupKeyValue.workEffortId" value="TestWorkeffort-2"/>
        <find-by-and entity-name="WorkEffortKeyword" map="lookupKeyValue" list="workEffortKeywordList"/>
        <assert>
            <if-empty field="workEffortKeywordList"/>
        </assert>
        <check-errors/>
    </simple-method>
    <!--Following testcases are for Timesheet services.-->
    <simple-method method-name="testCreateTimesheet" short-description="Test the service createTimesheet" login-required="false">
        <set field="serviceCtx.partyId" value="TestParty"/>
        <set field="serviceCtx.comments" value="Test timesheet"/>
        <set field="serviceCtx.statusId" value="TIMESHEET_IN_PROCESS"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createTimesheet" in-map-name="serviceCtx">
            <result-to-field result-name="timesheetId"/>
        </call-service>
        <entity-one entity-name="Timesheet" value-field="timesheet"/>
        <assert>
            <not><if-empty field="timesheet"/></not>
            <if-compare operator="equals" field="timesheet.partyId" value="TestParty"/>
            <if-compare operator="equals" field="timesheet.statusId" value="TIMESHEET_IN_PROCESS"/>
            <if-compare operator="equals" field="timesheet.comments" value="Test timesheet"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testUpdateTimesheet" short-description="Test the service updateTimesheet" login-required="false">
        <set field="serviceCtx.timesheetId" value="TestTimesheet-2"/>
        <set field="serviceCtx.clientPartyId" value="TestParty"/>
        <set field="serviceCtx.statusId" value="TIMESHEET_COMPLETED"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="updateTimesheet" in-map-name="serviceCtx"/>
        <entity-one entity-name="Timesheet" value-field="timesheet">
            <field-map field-name="timesheetId" value="TestTimesheet-2"/>
        </entity-one>
        <assert>
            <not><if-empty field="timesheet"/></not>
            <if-compare operator="equals" field="timesheet.clientPartyId" value="TestParty"/>
            <if-compare operator="equals" field="timesheet.statusId" value="TIMESHEET_COMPLETED"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testDeleteTimesheet" short-description="Test the service deleteTimesheet" login-required="false">
        <set field="serviceCtx.timesheetId" value="TestTimesheet-3"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="deleteTimesheet" in-map-name="serviceCtx"/>
        <entity-one entity-name="Timesheet" value-field="timesheet">
            <field-map field-name="timesheetId" value="TestTimesheet-3"/>
        </entity-one>
        <assert>
            <if-empty field="timesheet"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCreateTimesheets" short-description="Test the service createTimesheets" login-required="false">
        <set field="partyIdList" value="${groovy: ['TestParty', 'TestParty-1'];}" type="List"/>
        <set field="serviceCtx.partyIdList" from-field="partyIdList" type="List"/>
        <set field="serviceCtx.comments" value="Test timesheet for test parties"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createTimesheets" in-map-name="serviceCtx"/>
        <iterate entry="partyId" list="partyIdList">
            <set field="lookupKeyValue.partyId" from-field="partyId"/>
            <set field="lookupKeyValue.comments" value="Test timesheet for test parties"/>
            <find-by-and entity-name="Timesheet" map="lookupKeyValue" list="timesheetList"/>
            <assert>
                <not><if-empty field="timesheetList"/></not>
            </assert>
        </iterate>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCreateTimesheetForThisWeek" short-description="Test the service createTimesheetForThisWeek" login-required="false">
        <set field="serviceCtx.partyId" value="TestParty-1"/>
        <set field="serviceCtx.comments" value="Test timesheet"/>
        <set field="serviceCtx.requiredDate" value="2009-09-06 00:00:00.0" type="Timestamp"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createTimesheetForThisWeek" in-map-name="serviceCtx">
            <result-to-field result-name="timesheetId"/>
        </call-service>
        <entity-one entity-name="Timesheet" value-field="timesheet"/>
        <assert>
            <not><if-empty field="timesheet"/></not>
            <if-compare operator="equals" field="timesheet.partyId" value="TestParty-1"/>
            <if-compare operator="equals" field="timesheet.fromDate" value="2009-09-06 00:00:00.0"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testAddTimesheetToNewInvoice" short-description="Test the service addTimesheetToNewInvoice" login-required="false">
        <set field="serviceCtx.partyId" value="TestParty-1"/>
        <set field="serviceCtx.partyIdFrom" value="TestCompany"/>
        <set field="serviceCtx.timesheetId" value="TestTimesheet-2"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="addTimesheetToNewInvoice" in-map-name="serviceCtx">
            <result-to-field result-name="invoiceId"/>
        </call-service>
        <entity-one entity-name="Invoice" value-field="invoice"/>
        <assert>
            <not><if-empty field="invoice"/></not>
            <if-compare operator="equals" field="invoice.partyId" value="TestParty-1"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testCreateTimeEntry" short-description="Test the service createTimeEntry" login-required="false">
        <set field="serviceCtx.workEffortId" value="TestWorkeffort-2"/>
        <set field="serviceCtx.comments" value="Test Time Entry"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="createTimeEntry" in-map-name="serviceCtx">
            <result-to-field result-name="timeEntryId"/>
        </call-service>
        <entity-one entity-name="TimeEntry" value-field="timeEntry"/>
        <assert>
            <not><if-empty field="timeEntry"/></not>
            <if-compare operator="equals" field="timeEntry.workEffortId" value="TestWorkeffort-2"/>
            <if-compare operator="equals" field="timeEntry.comments" value="Test Time Entry"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testUpdateTimeEntry" short-description="Test the service updateTimeEntry" login-required="false">
        <set field="serviceCtx.timeEntryId" value="TestTimeEntry-1"/>
        <set field="serviceCtx.timesheetId" value="TestTimesheet-4"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="updateTimeEntry" in-map-name="serviceCtx"/>
        <entity-one entity-name="TimeEntry" value-field="timeEntry">
            <field-map field-name="timeEntryId" value="TestTimeEntry-1"/>
        </entity-one>
        <assert>
            <not><if-empty field="timeEntry"/></not>
            <if-compare operator="equals" field="timeEntry.timesheetId" value="TestTimesheet-4"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testDeleteTimeEntry" short-description="Test the service deleteTimeEntry" login-required="false">
        <set field="serviceCtx.timeEntryId" value="TestTimeEntry-2"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="deleteTimeEntry" in-map-name="serviceCtx"/>
        <entity-one entity-name="TimeEntry" value-field="timeEntry">
            <field-map field-name="timeEntryId" value="TestTimeEntry-2"/>
        </entity-one>
        <assert>
            <if-empty field="TimeEntry"/>
        </assert>
        <check-errors/>
    </simple-method>
    <simple-method method-name="testGetTimeEntryRate" short-description="Test the service getTimeEntryRate" login-required="false">
        <set field="serviceCtx.timeEntryId" value="TestTimeEntry-3"/>
        <set field="serviceCtx.currencyUomId" value="USD"/>
        <entity-one entity-name="UserLogin" value-field="userLogin">
            <field-map field-name="userLoginId" value="system"/>
        </entity-one>
        <set field="serviceCtx.userLogin" from-field="userLogin"/>
        <call-service service-name="getTimeEntryRate" in-map-name="serviceCtx">
            <result-to-field result-name="rateAmount"/>
        </call-service>
        <set field="lookupKeyValue.partyId" value="TestParty"/>
        <set field="lookupKeyValue.rateTypeId" value="STANDARD"/>
        <set field="lookupKeyValue.rateCurrencyUomId" value="USD"/>
        <find-by-and entity-name="RateAmount" map="lookupKeyValue" list="rateAmountList"/>
        <first-from-list entry="rateAmount" list="rateAmountList"/>
        <assert>
            <not><if-empty field="rateAmount"/></not>
        </assert>
        <check-errors/>
    </simple-method>
</simple-methods>
